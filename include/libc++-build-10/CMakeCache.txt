# This is the CMakeCache file.
# For build in directory: /home/namrata/libc++-build-10
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build a 32 bit version of the library.
BENCHMARK_BUILD_32_BITS:BOOL=OFF

//Flags used by the C++ compiler during coverage builds.
BENCHMARK_CXX_FLAGS_COVERAGE:STRING=-g

//Allow the downloading and in-tree building of unmet dependencies
BENCHMARK_DOWNLOAD_DEPENDENCIES:BOOL=OFF

//Enable building and running the assembly tests
BENCHMARK_ENABLE_ASSEMBLY_TESTS:BOOL=OFF

//Enable the use of exceptions in the benchmark library.
BENCHMARK_ENABLE_EXCEPTIONS:BOOL=OFF

//Enable building the unit tests which depend on gtest
BENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF

//Enable installation of benchmark. (Projects embedding benchmark
// may want to turn this OFF.)
BENCHMARK_ENABLE_INSTALL:BOOL=OFF

//Enable link time optimisation of the benchmark library.
BENCHMARK_ENABLE_LTO:BOOL=OFF

//Enable testing of the benchmark library.
BENCHMARK_ENABLE_TESTING:BOOL=OFF

//Flags used for linking binaries during coverage builds.
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE:STRING=

//Flags used by the shared libraries linker during coverage builds.
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE:STRING=

//Build and test using libc++ as the standard library.
BENCHMARK_USE_LIBCXX:BOOL=OFF

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=https://bugs.llvm.org/

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//Header providing backtrace(3) facility
Backtrace_HEADER:STRING=execinfo.h

//Path to a file.
Backtrace_INCLUDE_DIR:PATH=/usr/include

//Library providing backtrace(3), empty for default set of libraries
Backtrace_LIBRARY:FILEPATH=

//Dependencies for target
BugpointPasses_LIB_DEPENDS:STATIC=

//Dependencies for target
Bye_LIB_DEPENDS:STATIC=

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//The ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=/usr/local/bin/wllvm

//LLVM archiver
CMAKE_ASM_COMPILER_AR:FILEPATH=CMAKE_ASM_COMPILER_AR-NOTFOUND

//Generate index for LLVM archive
CMAKE_ASM_COMPILER_RANLIB:FILEPATH=CMAKE_ASM_COMPILER_RANLIB-NOTFOUND

//Flags used by the assembler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the assembler during debug builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the assembler during release builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/local/bin/wllvm++

//LLVM archiver
CMAKE_CXX_COMPILER_AR:FILEPATH=CMAKE_CXX_COMPILER_AR-NOTFOUND

//Generate index for LLVM archive
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=CMAKE_CXX_COMPILER_RANLIB-NOTFOUND

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C++ standard to conform to
CMAKE_CXX_STANDARD:STRING=14

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/local/bin/wllvm

//LLVM archiver
CMAKE_C_COMPILER_AR:FILEPATH=CMAKE_C_COMPILER_AR-NOTFOUND

//Generate index for LLVM archive
CMAKE_C_COMPILER_RANLIB:FILEPATH=CMAKE_C_COMPILER_RANLIB-NOTFOUND

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/home/namrata/libc++-install-10

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build FreeBSD packages
CPACK_BINARY_FREEBSD:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

//Enable to build RPM source packages
CPACK_SOURCE_RPM:BOOL=OFF

//Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

//Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

//Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

//Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

//Dependencies for target
DynamicLibraryLib_LIB_DEPENDS:STATIC=

//Dependencies for the target
ExampleIRTransforms_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//The gold linker
GOLD_EXECUTABLE:FILEPATH=/usr/bin/ld.gold

//go executable
GO_EXECUTABLE:FILEPATH=GO_EXECUTABLE-NOTFOUND

//OK
HAVE_STD_REGEX:BOOL=ON

//Path to a library.
ICONV_LIBRARY_PATH:FILEPATH=/usr/lib/x86_64-linux-gnu/libc.so

//Build libc++abi for baremetal targets.
LIBCXXABI_BAREMETAL:BOOL=OFF

//Build 32 bit libc++abi.
LIBCXXABI_BUILD_32_BITS:BOOL=OFF

//Build libc++abi with an externalized threading library.
//\n   This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON
LIBCXXABI_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXXABI_ENABLE_ASSERTIONS:BOOL=ON

//Provide support for exceptions in the runtime.
//\n  When disabled, libc++abi does not support stack unwinding
// and other exceptions-related features.
LIBCXXABI_ENABLE_EXCEPTIONS:BOOL=ON

//Build libc++abi with definitions for operator new/delete. Normally
// libc++
//\n    provides these definitions
LIBCXXABI_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXXABI_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code, even in static library
LIBCXXABI_ENABLE_PIC:BOOL=ON

//Build libc++abi as a shared library.
LIBCXXABI_ENABLE_SHARED:BOOL=ON

//Build libc++abi as a static library.
LIBCXXABI_ENABLE_STATIC:BOOL=ON

//Statically link the LLVM unwinder.
LIBCXXABI_ENABLE_STATIC_UNWINDER:BOOL=OFF

//Build with threads enabled
LIBCXXABI_ENABLE_THREADS:BOOL=OFF

//Fail and stop if a warning is triggered.
LIBCXXABI_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXXABI_EXECUTOR:STRING=None

//GCC toolchain for cross compiling.
LIBCXXABI_GCC_TOOLCHAIN:PATH=

//Build libc++abi with an externalized threading API.
//\n  This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON.
LIBCXXABI_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXXABI_HAS_PTHREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXXABI_HERMETIC_STATIC_LIBRARY:BOOL=OFF

//Generate build targets for the libc++abi unit tests.
LIBCXXABI_INCLUDE_TESTS:BOOL=ON

//Install the libc++abi library.
LIBCXXABI_INSTALL_LIBRARY:BOOL=ON

//Define libc++abi destination prefix.
LIBCXXABI_INSTALL_PREFIX:STRING=

//Install the shared libc++abi library.
LIBCXXABI_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libc++abi library.
LIBCXXABI_INSTALL_STATIC_LIBRARY:BOOL=ON

//Specify path to libc++ includes.
LIBCXXABI_LIBCXX_INCLUDES:PATH=/home/namrata/libc++-10/libcxx/include

//The path to libc++ library.
LIBCXXABI_LIBCXX_LIBRARY_PATH:PATH=/home/namrata/libc++-build-10/./lib

//Specify path to libc++ source.
LIBCXXABI_LIBCXX_PATH:PATH=/home/namrata/libc++-10/libcxx

//Define suffix of library directory name (32/64)
LIBCXXABI_LIBDIR_SUFFIX:STRING=

//Version of libc++abi. This will be reflected in the name of the
// shared library produced. For example, -DLIBCXXABI_LIBRARY_VERSION=x.y
// will result in the library being named libc++abi.x.y.dylib,
// along with the usual symlinks pointing to that.
LIBCXXABI_LIBRARY_VERSION:STRING=1.0

//Specify path to libunwind includes.
LIBCXXABI_LIBUNWIND_INCLUDES:PATH=

//Specify path to libunwind source.
LIBCXXABI_LIBUNWIND_PATH:PATH=

//Whether the libc++abi tests should link with the shared libc++
// library
LIBCXXABI_LINK_TESTS_WITH_SHARED_LIBCXX:BOOL=ON

//Whether the libc++abi tests should link with the shared libc++abi
// library
LIBCXXABI_LINK_TESTS_WITH_SHARED_LIBCXXABI:BOOL=ON

//Set this to make the terminate handler default to a silent alternative
LIBCXXABI_SILENT_TERMINATE:BOOL=OFF

//Sysroot for cross compiling.
LIBCXXABI_SYSROOT:PATH=

//TargetInfo to use when setting up test environment.
LIBCXXABI_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Target triple for cross compiling.
LIBCXXABI_TARGET_TRIPLE:STRING=

//Use compiler-rt instead of libgcc
LIBCXXABI_USE_COMPILER_RT:BOOL=OFF

//Build and use the LLVM unwinder.
LIBCXXABI_USE_LLVM_UNWINDER:BOOL=OFF

//A semicolon separated list of ABI macros to define in the site
// config header.
LIBCXX_ABI_DEFINES:STRING=

//Ignore auto-detection and force use of the Itanium ABI.
LIBCXX_ABI_FORCE_ITANIUM:BOOL=OFF

//Ignore auto-detection and force use of the Microsoft ABI.
LIBCXX_ABI_FORCE_MICROSOFT:BOOL=OFF

//The inline ABI namespace used by libc++. It defaults to __n where
// `n` is the current ABI version.
LIBCXX_ABI_NAMESPACE:STRING=

//Unstable ABI of libc++.
LIBCXX_ABI_UNSTABLE:BOOL=OFF

//ABI version of libc++. Can be either 1 or 2, where 2 is currently
// not stable. Defaults to 1.
LIBCXX_ABI_VERSION:STRING=1

//Use alternate GCC toolchain when building the native benchmarks
LIBCXX_BENCHMARK_NATIVE_GCC_TOOLCHAIN:STRING=

//Build the benchmarks against the specified native STL.
//\n         The value must be one of libc++/libstdc++
LIBCXX_BENCHMARK_NATIVE_STDLIB:STRING=

//Arguments to pass when running the benchmarks using check-cxx-benchmarks
LIBCXX_BENCHMARK_TEST_ARGS:STRING=--benchmark_min_time=0.01

//Build 32 bit libc++.
LIBCXX_BUILD_32_BITS:BOOL=OFF

//Build libc++ with an externalized threading library.
//\n     This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON
LIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Configure libcxx for use within an IDE
LIBCXX_CONFIGURE_IDE:BOOL=OFF

//The Profile-rt library used to build with code coverage
LIBCXX_COVERAGE_LIBRARY:STRING=

//Specify C++ ABI library to use.
LIBCXX_CXX_ABI:STRING=default

//Paths to C++ ABI header directories separated by ';'.
LIBCXX_CXX_ABI_INCLUDE_PATHS:PATH=/home/namrata/libc++-10/llvm/projects/libcxxabi/include

//Paths to C++ ABI library directory
LIBCXX_CXX_ABI_LIBRARY_PATH:PATH=

//Disable #warnings about conflicting macros.
LIBCXX_DISABLE_MACRO_CONFLICT_WARNINGS:BOOL=OFF

//Use and install a linker script for the given ABI library
LIBCXX_ENABLE_ABI_LINKER_SCRIPT:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXX_ENABLE_ASSERTIONS:BOOL=OFF

//Use exceptions.
LIBCXX_ENABLE_EXCEPTIONS:BOOL=ON

//Build libc++experimental.a
LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=ON

//Build filesystem as part of the main libc++ library
LIBCXX_ENABLE_FILESYSTEM:BOOL=ON

//Build libc++ with support for the global filesystem namespace.
LIBCXX_ENABLE_GLOBAL_FILESYSTEM_NAMESPACE:BOOL=ON

//Build libc++ with support for a monotonic clock.
//\n   This option may only be set to OFF when LIBCXX_ENABLE_THREADS=OFF.
LIBCXX_ENABLE_MONOTONIC_CLOCK:BOOL=ON

//Build libc++ with definitions for operator new/delete. This option
// can
//\n     be used to disable the definitions when libc++abi is expected
// to provide
//\n     them
LIBCXX_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Enable the parallel algorithms library. This requires the PSTL
// to be available.
LIBCXX_ENABLE_PARALLEL_ALGORITHMS:BOOL=OFF

//Compile with pedantic enabled.
LIBCXX_ENABLE_PEDANTIC:BOOL=OFF

//Use run time type information.
LIBCXX_ENABLE_RTTI:BOOL=ON

//Build libc++ as a shared library.
LIBCXX_ENABLE_SHARED:BOOL=ON

//Build libc++ as a static library.
LIBCXX_ENABLE_STATIC:BOOL=ON

//Use a static copy of the ABI library when linking libc++.
//\n   This option cannot be used with LIBCXX_ENABLE_ABI_LINKER_SCRIPT.
LIBCXX_ENABLE_STATIC_ABI_LIBRARY:BOOL=ON

//Build libc++ with support for stdin/std::cin.
LIBCXX_ENABLE_STDIN:BOOL=ON

//Build libc++ with support for stdout/std::cout.
LIBCXX_ENABLE_STDOUT:BOOL=ON

//Build libc++ with support for threads.
LIBCXX_ENABLE_THREADS:BOOL=OFF

//Build libc++ with support for thread-unsafe C functions
LIBCXX_ENABLE_THREAD_UNSAFE_C_FUNCTIONS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXX_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXX_EXECUTOR:STRING=None

//Use alternate GCC toolchain.
LIBCXX_GCC_TOOLCHAIN:STRING=

//Enable generating code coverage.
LIBCXX_GENERATE_COVERAGE:BOOL=OFF

//Build libc++ with an externalized threading API.
//\n   This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON.
LIBCXX_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Whether typeinfo names are expected to be unique. Defining this
// option overrides the default configuration in the library.
LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT:STRING=

//Build libc++ with support for the Musl C library
LIBCXX_HAS_MUSL_LIBC:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXX_HAS_PTHREAD_API:BOOL=OFF

//Ignore auto-detection and force use of win32 thread API
LIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXX_HERMETIC_STATIC_LIBRARY:BOOL=OFF

//Enable per TU ABI insulation by default. To be used by vendors.
LIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT:BOOL=OFF

//Build the libc++ benchmarks and their dependencies
LIBCXX_INCLUDE_BENCHMARKS:BOOL=ON

//Build the libc++ documentation.
LIBCXX_INCLUDE_DOCS:BOOL=ON

//Build the libc++ tests.
LIBCXX_INCLUDE_TESTS:BOOL=ON

//Install libc++experimental.a
LIBCXX_INSTALL_EXPERIMENTAL_LIBRARY:BOOL=ON

//Install the libc++ headers.
LIBCXX_INSTALL_HEADERS:BOOL=ON

//Define libc++ header destination prefix.
LIBCXX_INSTALL_HEADER_PREFIX:STRING=

//Install the libc++ library.
LIBCXX_INSTALL_LIBRARY:BOOL=ON

//Define libc++ destination prefix.
LIBCXX_INSTALL_PREFIX:STRING=

//Install the shared libc++ library.
LIBCXX_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libc++ library.
LIBCXX_INSTALL_STATIC_LIBRARY:BOOL=ON

//Install libc++ support headers.
LIBCXX_INSTALL_SUPPORT_HEADERS:BOOL=ON

//Version of libc++abi's ABI to re-export from libc++ when re-exporting
// is enabled.
//\n                                               Note that this
// is not related to the version of libc++'s ABI itself!
LIBCXX_LIBCPPABI_VERSION:STRING=2

//Path to a file.
LIBCXX_LIBCXXABI_INCLUDES_INTERNAL:PATH=/home/namrata/libc++-10/llvm/projects/libcxxabi/include

//Define suffix of library directory name (32/64)
LIBCXX_LIBDIR_SUFFIX:STRING=

//Configuration variant to use for LIT.
LIBCXX_LIT_VARIANT:STRING=libcxx

//Enable overwriting darwins libc++ installation.
LIBCXX_OVERRIDE_DARWIN_INSTALL:BOOL=OFF

//Statically link the ABI library to shared library
LIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY:BOOL=ON

//Statically link the ABI library to static library
LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY:BOOL=ON

//Use alternate sysroot.
LIBCXX_SYSROOT:STRING=

//TargetInfo to use when setting up test environment.
LIBCXX_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Use alternate target triple.
LIBCXX_TARGET_TRIPLE:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_COMPILER_FLAGS:STRING=

//Test gdb pretty printers.
LIBCXX_TEST_GDB_PRETTY_PRINTERS:BOOL=OFF

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBCXX_USE_COMPILER_RT:BOOL=OFF

//Path to a library.
LIBRT:FILEPATH=/usr/lib/x86_64-linux-gnu/librt.so

//Path to a file.
LIBXML2_INCLUDE_DIR:PATH=LIBXML2_INCLUDE_DIR-NOTFOUND

//Path to a library.
LIBXML2_LIBRARY:FILEPATH=LIBXML2_LIBRARY-NOTFOUND

//Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=/usr/bin/xmllint

//Dependencies for the target
LLVMAArch64AsmParser_LIB_DEPENDS:STATIC=general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMAArch64CodeGen_LIB_DEPENDS:STATIC=general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCFGuard;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMAArch64Desc_LIB_DEPENDS:STATIC=general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMAArch64Disassembler_LIB_DEPENDS:STATIC=general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMAArch64Info_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMAArch64Utils_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMAMDGPUAsmParser_LIB_DEPENDS:STATIC=general;LLVMAMDGPUDesc;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMAMDGPUCodeGen_LIB_DEPENDS:STATIC=general;LLVMAMDGPUDesc;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMBinaryFormat;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMMIRParser;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMVectorize;general;LLVMipo;

//Dependencies for the target
LLVMAMDGPUDesc_LIB_DEPENDS:STATIC=general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMBinaryFormat;general;LLVMCore;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMAMDGPUDisassembler_LIB_DEPENDS:STATIC=general;LLVMAMDGPUDesc;general;LLVMAMDGPUInfo;general;LLVMAMDGPUUtils;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMAMDGPUInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMAMDGPUUtils_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMCore;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMARMAsmParser_LIB_DEPENDS:STATIC=general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMARMCodeGen_LIB_DEPENDS:STATIC=general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCFGuard;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMARMDesc_LIB_DEPENDS:STATIC=general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMARMDisassembler_LIB_DEPENDS:STATIC=general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMUtils;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMARMInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMARMUtils_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMAggressiveInstCombine_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMAnalysis_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMCore;general;LLVMObject;general;LLVMProfileData;general;LLVMSupport;

//Dependencies for the target
LLVMAsmParser_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMAsmPrinter_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMBinaryFormat;general;LLVMCodeGen;general;LLVMCore;general;LLVMDebugInfoCodeView;general;LLVMDebugInfoDWARF;general;LLVMDebugInfoMSF;general;LLVMMC;general;LLVMMCParser;general;LLVMRemarks;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMBPFAsmParser_LIB_DEPENDS:STATIC=general;LLVMBPFDesc;general;LLVMBPFInfo;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMBPFCodeGen_LIB_DEPENDS:STATIC=general;LLVMAsmPrinter;general;LLVMBPFDesc;general;LLVMBPFInfo;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMBPFDesc_LIB_DEPENDS:STATIC=general;LLVMBPFInfo;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMBPFDisassembler_LIB_DEPENDS:STATIC=general;LLVMBPFInfo;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMBPFInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMBinaryFormat_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMBitReader_LIB_DEPENDS:STATIC=general;LLVMBitstreamReader;general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMBitWriter_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMMC;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMBitstreamReader_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMCFGuard_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMCFIVerify_LIB_DEPENDS:STATIC=general;LLVMDebugInfoDWARF;general;LLVMMC;general;LLVMMCParser;general;LLVMObject;general;LLVMSupport;general;LLVMSymbolize;

//Dependencies for the target
LLVMCodeGen_LIB_DEPENDS:STATIC=general;-lpthread;general;LLVMAnalysis;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMCore;general;LLVMMC;general;LLVMProfileData;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMCore_LIB_DEPENDS:STATIC=general;-lpthread;general;LLVMBinaryFormat;general;LLVMRemarks;general;LLVMSupport;

//Dependencies for the target
LLVMCoroutines_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTransformUtils;general;LLVMipo;

//Dependencies for the target
LLVMCoverage_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMObject;general;LLVMProfileData;general;LLVMSupport;

//Dependencies for the target
LLVMDWARFLinker_LIB_DEPENDS:STATIC=general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMDebugInfoDWARF;general;LLVMMC;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMDebugInfoCodeView_LIB_DEPENDS:STATIC=general;LLVMDebugInfoMSF;general;LLVMSupport;

//Dependencies for the target
LLVMDebugInfoDWARF_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMMC;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMDebugInfoGSYM_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMDebugInfoMSF_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMDebugInfoPDB_LIB_DEPENDS:STATIC=general;LLVMDebugInfoCodeView;general;LLVMDebugInfoMSF;general;LLVMObject;general;LLVMSupport;

//Dependencies for target
LLVMDemangle_LIB_DEPENDS:STATIC=

//Dependencies for the target
LLVMDlltoolDriver_LIB_DEPENDS:STATIC=general;LLVMObject;general;LLVMOption;general;LLVMSupport;

//Dependencies for the target
LLVMExecutionEngine_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMMC;general;LLVMObject;general;LLVMRuntimeDyld;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMExegesisAArch64_LIB_DEPENDS:STATIC=general;LLVMAArch64CodeGen;general;LLVMAArch64AsmParser;general;LLVMAArch64Desc;general;LLVMAArch64Disassembler;general;LLVMAArch64Info;general;LLVMAArch64Utils;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesisMips_LIB_DEPENDS:STATIC=general;LLVMMipsCodeGen;general;LLVMMipsAsmParser;general;LLVMMipsDesc;general;LLVMMipsDisassembler;general;LLVMMipsInfo;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesisPowerPC_LIB_DEPENDS:STATIC=general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmParser;general;LLVMPowerPCDesc;general;LLVMPowerPCDisassembler;general;LLVMPowerPCInfo;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesisX86_LIB_DEPENDS:STATIC=general;LLVMX86CodeGen;general;LLVMX86AsmParser;general;LLVMX86Desc;general;LLVMX86Disassembler;general;LLVMX86Info;general;LLVMX86Utils;general;LLVMExegesis;

//Dependencies for the target
LLVMExegesis_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCodeGen;general;LLVMCore;general;LLVMExecutionEngine;general;LLVMGlobalISel;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMMCJIT;general;LLVMMCParser;general;LLVMObject;general;LLVMObjectYAML;general;LLVMSupport;

//Dependencies for the target
LLVMFrontendOpenMP_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMFuzzMutate_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMCore;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMGlobalISel_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for target
LLVMHello_LIB_DEPENDS:STATIC=

//Dependencies for the target
LLVMHexagonAsmParser_LIB_DEPENDS:STATIC=general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMHexagonCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMHexagonAsmParser;general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMMC;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMipo;

//Dependencies for the target
LLVMHexagonDesc_LIB_DEPENDS:STATIC=general;LLVMHexagonInfo;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMHexagonDisassembler_LIB_DEPENDS:STATIC=general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMHexagonInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMIRReader_LIB_DEPENDS:STATIC=general;LLVMAsmParser;general;LLVMBitReader;general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMInstCombine_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMInstrumentation_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMMC;general;LLVMProfileData;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMInterpreter_LIB_DEPENDS:STATIC=general;LLVMCodeGen;general;LLVMCore;general;LLVMExecutionEngine;general;LLVMSupport;

//Dependencies for the target
LLVMJITLink_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMLTO_LIB_DEPENDS:STATIC=general;LLVMAggressiveInstCombine;general;LLVMAnalysis;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMCodeGen;general;LLVMCore;general;LLVMInstCombine;general;LLVMLinker;general;LLVMMC;general;LLVMObjCARCOpts;general;LLVMObject;general;LLVMPasses;general;LLVMRemarks;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMipo;

//Dependencies for the target
LLVMLanaiAsmParser_LIB_DEPENDS:STATIC=general;LLVMLanaiDesc;general;LLVMLanaiInfo;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;

//Dependencies for the target
LLVMLanaiCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMLanaiAsmParser;general;LLVMLanaiDesc;general;LLVMLanaiInfo;general;LLVMMC;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMLanaiDesc_LIB_DEPENDS:STATIC=general;LLVMLanaiInfo;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMLanaiDisassembler_LIB_DEPENDS:STATIC=general;LLVMLanaiDesc;general;LLVMLanaiInfo;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Dependencies for the target
LLVMLanaiInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMLibDriver_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMBitReader;general;LLVMObject;general;LLVMOption;general;LLVMSupport;

//Dependencies for the target
LLVMLineEditor_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMLinker_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMMCA_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMMCDisassembler_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMMCJIT_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMExecutionEngine;general;LLVMObject;general;LLVMRuntimeDyld;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMMCParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMMC_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMDebugInfoCodeView;general;LLVMSupport;

//Dependencies for the target
LLVMMIRParser_LIB_DEPENDS:STATIC=general;LLVMAsmParser;general;LLVMBinaryFormat;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMMSP430AsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMMSP430Desc;general;LLVMMSP430Info;general;LLVMSupport;

//Dependencies for the target
LLVMMSP430CodeGen_LIB_DEPENDS:STATIC=general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMMSP430Desc;general;LLVMMSP430Info;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMMSP430Desc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMSP430Info;general;LLVMSupport;

//Dependencies for the target
LLVMMSP430Disassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMMSP430Info;general;LLVMSupport;

//Dependencies for the target
LLVMMSP430Info_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMMipsAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMMipsDesc;general;LLVMMipsInfo;general;LLVMSupport;

//Dependencies for the target
LLVMMipsCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMMipsDesc;general;LLVMMipsInfo;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMMipsDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMipsInfo;general;LLVMSupport;

//Dependencies for the target
LLVMMipsDisassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMMipsInfo;general;LLVMSupport;

//Dependencies for the target
LLVMMipsInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMNVPTXCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMVectorize;general;LLVMipo;

//Dependencies for the target
LLVMNVPTXDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMNVPTXInfo;general;LLVMSupport;

//Dependencies for the target
LLVMNVPTXInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMObjCARCOpts_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMObjectYAML_LIB_DEPENDS:STATIC=general;LLVMDebugInfoCodeView;general;LLVMMC;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMObject_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMBitReader;general;LLVMCore;general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;general;LLVMTextAPI;

//Dependencies for the target
LLVMOption_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMOrcError_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMOrcJIT_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMExecutionEngine;general;LLVMJITLink;general;LLVMMC;general;LLVMObject;general;LLVMOrcError;general;LLVMPasses;general;LLVMRuntimeDyld;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMAnalysis;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMPasses;

//Dependencies for the target
LLVMPasses_LIB_DEPENDS:STATIC=general;LLVMAggressiveInstCombine;general;LLVMAnalysis;general;LLVMCodeGen;general;LLVMCore;general;LLVMInstCombine;general;LLVMInstrumentation;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMVectorize;general;LLVMipo;

//Dependencies for the target
LLVMPowerPCAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMPowerPCDesc;general;LLVMPowerPCInfo;general;LLVMSupport;

//Dependencies for the target
LLVMPowerPCCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMPowerPCDesc;general;LLVMPowerPCInfo;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMPowerPCDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMPowerPCInfo;general;LLVMSupport;

//Dependencies for the target
LLVMPowerPCDisassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMPowerPCInfo;general;LLVMSupport;

//Dependencies for the target
LLVMPowerPCInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMProfileData_LIB_DEPENDS:STATIC=general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMRISCVAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMRISCVDesc;general;LLVMRISCVInfo;general;LLVMRISCVUtils;general;LLVMSupport;

//Dependencies for the target
LLVMRISCVCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMRISCVDesc;general;LLVMRISCVInfo;general;LLVMRISCVUtils;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMRISCVDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMRISCVInfo;general;LLVMRISCVUtils;general;LLVMSupport;

//Dependencies for the target
LLVMRISCVDisassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMRISCVInfo;general;LLVMSupport;

//Dependencies for the target
LLVMRISCVInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMRISCVUtils_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMRemarks_LIB_DEPENDS:STATIC=general;LLVMBitstreamReader;general;LLVMSupport;

//Dependencies for the target
LLVMRuntimeDyld_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMScalarOpts_LIB_DEPENDS:STATIC=general;LLVMAggressiveInstCombine;general;LLVMAnalysis;general;LLVMCore;general;LLVMInstCombine;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMSelectionDAG_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;

//Dependencies for the target
LLVMSparcAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMSparcDesc;general;LLVMSparcInfo;general;LLVMSupport;

//Dependencies for the target
LLVMSparcCodeGen_LIB_DEPENDS:STATIC=general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSelectionDAG;general;LLVMSparcDesc;general;LLVMSparcInfo;general;LLVMSupport;general;LLVMTarget;

//Dependencies for the target
LLVMSparcDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSparcInfo;general;LLVMSupport;

//Dependencies for the target
LLVMSparcDisassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMSparcInfo;general;LLVMSupport;

//Dependencies for the target
LLVMSparcInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMSupport_LIB_DEPENDS:STATIC=general;z;general;rt;general;dl;general;tinfo;general;-lpthread;general;m;general;LLVMDemangle;

//Dependencies for the target
LLVMSymbolize_LIB_DEPENDS:STATIC=general;LLVMDebugInfoDWARF;general;LLVMDebugInfoPDB;general;LLVMDemangle;general;LLVMObject;general;LLVMSupport;

//Dependencies for the target
LLVMSystemZAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;general;LLVMSystemZDesc;general;LLVMSystemZInfo;

//Dependencies for the target
LLVMSystemZCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMSystemZDesc;general;LLVMSystemZInfo;general;LLVMTarget;

//Dependencies for the target
LLVMSystemZDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;general;LLVMSystemZInfo;

//Dependencies for the target
LLVMSystemZDisassembler_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMSystemZDesc;general;LLVMSystemZInfo;

//Dependencies for the target
LLVMSystemZInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMTableGenGlobalISel_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMTableGen_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMTarget_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMMC;general;LLVMSupport;

//Dependencies for the target
LLVMTestingSupport_LIB_DEPENDS:STATIC=general;LLVMSupport;general;gtest;

//Dependencies for the target
LLVMTextAPI_LIB_DEPENDS:STATIC=general;LLVMBinaryFormat;general;LLVMSupport;

//Dependencies for the target
LLVMTransformUtils_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;

//Dependencies for the target
LLVMVectorize_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMCore;general;LLVMSupport;general;LLVMTransformUtils;

//Dependencies for the target
LLVMWebAssemblyAsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;general;LLVMWebAssemblyInfo;

//Dependencies for the target
LLVMWebAssemblyCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMBinaryFormat;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMScalarOpts;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMWebAssemblyDesc;general;LLVMWebAssemblyInfo;

//Dependencies for the target
LLVMWebAssemblyDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;general;LLVMWebAssemblyInfo;

//Dependencies for the target
LLVMWebAssemblyDisassembler_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMWebAssemblyDesc;general;LLVMWebAssemblyInfo;

//Dependencies for the target
LLVMWebAssemblyInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMWindowsManifest_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMX86AsmParser_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCParser;general;LLVMSupport;general;LLVMX86Desc;general;LLVMX86Info;

//Dependencies for the target
LLVMX86CodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCFGuard;general;LLVMCodeGen;general;LLVMCore;general;LLVMGlobalISel;general;LLVMMC;general;LLVMProfileData;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMX86Desc;general;LLVMX86Info;general;LLVMX86Utils;

//Dependencies for the target
LLVMX86Desc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMMCDisassembler;general;LLVMObject;general;LLVMSupport;general;LLVMX86Info;general;LLVMX86Utils;

//Dependencies for the target
LLVMX86Disassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMX86Info;

//Dependencies for the target
LLVMX86Info_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMX86Utils_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMXCoreCodeGen_LIB_DEPENDS:STATIC=general;LLVMAnalysis;general;LLVMAsmPrinter;general;LLVMCodeGen;general;LLVMCore;general;LLVMMC;general;LLVMSelectionDAG;general;LLVMSupport;general;LLVMTarget;general;LLVMTransformUtils;general;LLVMXCoreDesc;general;LLVMXCoreInfo;

//Dependencies for the target
LLVMXCoreDesc_LIB_DEPENDS:STATIC=general;LLVMMC;general;LLVMSupport;general;LLVMXCoreInfo;

//Dependencies for the target
LLVMXCoreDisassembler_LIB_DEPENDS:STATIC=general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMXCoreInfo;

//Dependencies for the target
LLVMXCoreInfo_LIB_DEPENDS:STATIC=general;LLVMSupport;

//Dependencies for the target
LLVMXRay_LIB_DEPENDS:STATIC=general;LLVMObject;general;LLVMSupport;

//Enable abi-breaking checks.  Can be WITH_ASSERTS, FORCE_ON or
// FORCE_OFF.
LLVM_ABI_BREAKING_CHECKS:STRING=WITH_ASSERTS

//Embed the version control system revision in LLVM
LLVM_APPEND_VC_REV:BOOL=ON

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=/home/namrata/libc++-build-10

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Build 32 bits executables and libraries.
LLVM_BUILD_32_BITS:BOOL=OFF

//Add LLVM benchmark targets to the list of default
//\ntargets. If OFF, benchmarks still could be built using Benchmarks
// target.
LLVM_BUILD_BENCHMARKS:BOOL=OFF

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build LLVM and tools with PGO instrumentation. May be specified
// as IR or Frontend
LLVM_BUILD_INSTRUMENTED:STRING=OFF

//Build LLVM and tools with Code Coverage instrumentation
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Build libllvm-c re-export library (Darwin only)
LLVM_BUILD_LLVM_C_DYLIB:BOOL=OFF

//Build libllvm dynamic library
LLVM_BUILD_LLVM_DYLIB:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=ON

//Build the LLVM runtimes. If OFF, just generate build targets.
LLVM_BUILD_RUNTIMES:BOOL=ON

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=ON

//Build LLVM utility binaries. If OFF, just generate build targets.
LLVM_BUILD_UTILS:BOOL=ON

//Statically link Bye into tools (if available)
LLVM_BYE_LINK_INTO_TOOLS:BOOL=OFF

//Set to ON for a ccache enabled build
LLVM_CCACHE_BUILD:BOOL=OFF

//Sign executables and dylibs with the given identity or skip if
// empty (Darwin Only)
LLVM_CODESIGNING_IDENTITY:STRING=

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-unknown-linux-gnu

//Dependency debugging mode to verify correctly expressed library
// dependencies (Darwin only)
LLVM_DEPENDENCY_DEBUGGING:BOOL=OFF

//Semicolon-separated list of components to include in libLLVM,
// or "all".
LLVM_DYLIB_COMPONENTS:STRING=all

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Build bindings.
LLVM_ENABLE_BINDINGS:BOOL=ON

//Turn on memory dumps on crashes. Currently only implemented on
// Windows.
LLVM_ENABLE_CRASH_DUMPS:BOOL=OFF

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Debug: Prints tablegen patterns that were used for selecting
LLVM_ENABLE_DAGISEL_COV:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable dump functions even when assertions are disabled
LLVM_ENABLE_DUMP:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Enable expensive checks
LLVM_ENABLE_EXPENSIVE_CHECKS:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Enable collection of GlobalISel rule coverage
LLVM_ENABLE_GISEL_COV:BOOL=OFF

//Disable optional build system features that cause problems for
// IDE generators
LLVM_ENABLE_IDE:BOOL=OFF

//Build LLVM and tools with IR PGO instrumentation (deprecated)
LLVM_ENABLE_IR_PGO:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Use libedit if available.
LLVM_ENABLE_LIBEDIT:BOOL=ON

//Use libpfm for performance counters if available.
LLVM_ENABLE_LIBPFM:BOOL=ON

//Use libxml2 if available. Can be ON, OFF, or FORCE_ON
LLVM_ENABLE_LIBXML2:STRING=ON

//Use lld as C and C++ linker.
LLVM_ENABLE_LLD:BOOL=OFF

//Compile with -fmodules-local-submodule-visibility.
LLVM_ENABLE_LOCAL_SUBMODULE_VISIBILITY:BOOL=ON

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//Compile with C++ modules enabled.
LLVM_ENABLE_MODULES:BOOL=OFF

//Compile with -gmodules.
LLVM_ENABLE_MODULE_DEBUGGING:BOOL=OFF

//Build OCaml bindings documentation.
LLVM_ENABLE_OCAMLDOC:BOOL=ON

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Enable per-target runtimes directory
LLVM_ENABLE_PER_TARGET_RUNTIME_DIR:BOOL=OFF

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Enable plugin support
LLVM_ENABLE_PLUGINS:BOOL=ON

//Semicolon-separated list of projects to build (clang;clang-tools-extra;compiler-rt;debuginfo-tests;libc;libclc;libcxx;libcxxabi;libunwind;lld;lldb;llgo;mlir;openmp;parallel-libs;polly;pstl),
// or "all".
LLVM_ENABLE_PROJECTS:STRING=libcxx;libcxxabi

LLVM_ENABLE_PROJECTS_USED:BOOL=ON

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Semicolon-separated list of runtimes to build (libcxx;libcxxabi;libunwind;compiler-rt),
// or "all".
LLVM_ENABLE_RUNTIMES:STRING=

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=OFF

//Emit unwind tables for the libraries
LLVM_ENABLE_UNWIND_TABLES:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=ON

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Enable Support for the Z3 constraint solver in LLVM.
LLVM_ENABLE_Z3_SOLVER:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
LLVM_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//Path to clang source directory
LLVM_EXTERNAL_CLANG_SOURCE_DIR:PATH=

//Path to compiler-rt source directory
LLVM_EXTERNAL_COMPILER_RT_SOURCE_DIR:PATH=

//Path to debuginfo-tests source directory
LLVM_EXTERNAL_DEBUGINFO_TESTS_SOURCE_DIR:PATH=

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=

LLVM_EXTERNAL_LIBCXXABI_SOURCE_DIR:PATH=/home/namrata/libc++-10/llvm/../libcxxabi

LLVM_EXTERNAL_LIBCXX_SOURCE_DIR:PATH=/home/namrata/libc++-10/llvm/../libcxx

//Path to libc source directory
LLVM_EXTERNAL_LIBC_SOURCE_DIR:PATH=

//Path to libunwind source directory
LLVM_EXTERNAL_LIBUNWIND_SOURCE_DIR:PATH=

//Command used to spawn lit
LLVM_EXTERNAL_LIT:STRING=

//Path to lldb source directory
LLVM_EXTERNAL_LLDB_SOURCE_DIR:PATH=

//Path to lld source directory
LLVM_EXTERNAL_LLD_SOURCE_DIR:PATH=

//Path to llgo source directory
LLVM_EXTERNAL_LLGO_SOURCE_DIR:PATH=

//Path to mlir source directory
LLVM_EXTERNAL_MLIR_SOURCE_DIR:PATH=

//Path to openmp source directory
LLVM_EXTERNAL_OPENMP_SOURCE_DIR:PATH=

//Path to parallel-libs source directory
LLVM_EXTERNAL_PARALLEL_LIBS_SOURCE_DIR:PATH=

//Path to polly source directory
LLVM_EXTERNAL_POLLY_SOURCE_DIR:PATH=

//Path to pstl source directory
LLVM_EXTERNAL_PSTL_SOURCE_DIR:PATH=

//Path to a program.
LLVM_FILECHECK_EXE:FILEPATH=LLVM_FILECHECK_EXE-NOTFOUND

//Enable statistics collection for builds that wouldn't normally
// enable it
LLVM_FORCE_ENABLE_STATS:BOOL=OFF

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-unknown-linux-gnu

//Generate benchmark targets. If OFF, benchmarks can't be built.
LLVM_INCLUDE_BENCHMARKS:BOOL=ON

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=ON

//Include the Go bindings tests in test build targets.
LLVM_INCLUDE_GO_TESTS:BOOL=ON

//Generate build targets for the LLVM runtimes.
LLVM_INCLUDE_RUNTIMES:BOOL=ON

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=ON

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=ON

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=ON

//Install symlinks from the binutils tool names to the corresponding
// LLVM tools.
LLVM_INSTALL_BINUTILS_SYMLINKS:BOOL=OFF

//Install symlinks from the cctools tool names to the corresponding
// LLVM tools.
LLVM_INSTALL_CCTOOLS_SYMLINKS:BOOL=OFF

//Doxygen-generated HTML documentation install directory
LLVM_INSTALL_DOXYGEN_HTML_DIR:STRING=share/doc/llvm/doxygen-html

//Install the modulemap files in the 'install' target.
LLVM_INSTALL_MODULEMAPS:BOOL=OFF

//OCamldoc-generated HTML documentation install directory
LLVM_INSTALL_OCAMLDOC_HTML_DIR:STRING=share/doc/llvm/ocaml-html

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Include utility binaries in the 'install' target.
LLVM_INSTALL_UTILS:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Path to fuzzing library for linking with fuzz targets
LLVM_LIB_FUZZING_ENGINE:PATH=

//Link tools against the libllvm dynamic library
LLVM_LINK_LLVM_DYLIB:BOOL=OFF

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv

//Force TableGen to be built with optimization
LLVM_OPTIMIZED_TABLEGEN:BOOL=OFF

//Pass -O1 on debug sanitizer builds
LLVM_OPTIMIZE_SANITIZED_BUILDS:BOOL=ON

//Define the maximum number of concurrent compilation jobs (Ninja
// only).
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs (Ninja only).
LLVM_PARALLEL_LINK_JOBS:STRING=

//Profiling data file to use when compiling in order to improve
// runtime performance.
LLVM_PROFDATA_FILE:FILEPATH=

//Path to a library.
LLVM_PTHREAD_LIBRARY_PATH:FILEPATH=/usr/lib/x86_64-linux-gnu/libpthread.so

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=/home/namrata/libc++-10/llvm

//Use prefix for sources in debug info
LLVM_SOURCE_PREFIX:STRING=

//.spec file to use for srpm generation
LLVM_SRPM_USER_BINARY_SPECFILE:FILEPATH=/home/namrata/libc++-10/llvm/llvm.spec.in

//Statically link the standard library.
LLVM_STATIC_LINK_CXX_STDLIB:BOOL=OFF

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=all

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//The name of environment variable to override default target.
// Disabled by blank.
LLVM_TARGET_TRIPLE_ENV:STRING=

//Set to ON to only warn when using a toolchain which is about
// to be deprecated, instead of emitting an error.
LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN:BOOL=OFF

//Path for binary subdirectory (defaults to 'bin')
LLVM_TOOLS_INSTALL_DIR:STRING=bin

//Whether to build bugpoint as part of LLVM
LLVM_TOOL_BUGPOINT_BUILD:BOOL=ON

//Whether to build bugpoint-passes as part of LLVM
LLVM_TOOL_BUGPOINT_PASSES_BUILD:BOOL=ON

//Whether to build clang as part of LLVM
LLVM_TOOL_CLANG_BUILD:BOOL=FALSE

//Whether to build CLANG_TOOLS_EXTRA as part of LLVM
LLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD:BOOL=FALSE

//Whether to build compiler-rt as part of LLVM
LLVM_TOOL_COMPILER_RT_BUILD:BOOL=FALSE

//Whether to build debuginfo-tests as part of LLVM
LLVM_TOOL_DEBUGINFO_TESTS_BUILD:BOOL=FALSE

//Whether to build dragonegg as part of LLVM
LLVM_TOOL_DRAGONEGG_BUILD:BOOL=OFF

//Whether to build dsymutil as part of LLVM
LLVM_TOOL_DSYMUTIL_BUILD:BOOL=ON

//Whether to build gold as part of LLVM
LLVM_TOOL_GOLD_BUILD:BOOL=ON

//Whether to build LIBCLC as part of LLVM
LLVM_TOOL_LIBCLC_BUILD:BOOL=FALSE

//Whether to build libcxxabi as part of LLVM
LLVM_TOOL_LIBCXXABI_BUILD:BOOL=TRUE

//Whether to build libcxx as part of LLVM
LLVM_TOOL_LIBCXX_BUILD:BOOL=TRUE

//Whether to build libc as part of LLVM
LLVM_TOOL_LIBC_BUILD:BOOL=FALSE

//Whether to build libunwind as part of LLVM
LLVM_TOOL_LIBUNWIND_BUILD:BOOL=FALSE

//Whether to build llc as part of LLVM
LLVM_TOOL_LLC_BUILD:BOOL=ON

//Whether to build lldb as part of LLVM
LLVM_TOOL_LLDB_BUILD:BOOL=FALSE

//Whether to build lld as part of LLVM
LLVM_TOOL_LLD_BUILD:BOOL=FALSE

//Whether to build llgo as part of LLVM
LLVM_TOOL_LLGO_BUILD:BOOL=FALSE

//Whether to build lli as part of LLVM
LLVM_TOOL_LLI_BUILD:BOOL=ON

//Whether to build llvm-ar as part of LLVM
LLVM_TOOL_LLVM_AR_BUILD:BOOL=ON

//Whether to build llvm-as as part of LLVM
LLVM_TOOL_LLVM_AS_BUILD:BOOL=ON

//Whether to build llvm-as-fuzzer as part of LLVM
LLVM_TOOL_LLVM_AS_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-bcanalyzer as part of LLVM
LLVM_TOOL_LLVM_BCANALYZER_BUILD:BOOL=ON

//Whether to build llvm-cat as part of LLVM
LLVM_TOOL_LLVM_CAT_BUILD:BOOL=ON

//Whether to build llvm-cfi-verify as part of LLVM
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD:BOOL=ON

//Whether to build llvm-config as part of LLVM
LLVM_TOOL_LLVM_CONFIG_BUILD:BOOL=ON

//Whether to build llvm-cov as part of LLVM
LLVM_TOOL_LLVM_COV_BUILD:BOOL=ON

//Whether to build llvm-cvtres as part of LLVM
LLVM_TOOL_LLVM_CVTRES_BUILD:BOOL=ON

//Whether to build llvm-cxxdump as part of LLVM
LLVM_TOOL_LLVM_CXXDUMP_BUILD:BOOL=ON

//Whether to build llvm-cxxfilt as part of LLVM
LLVM_TOOL_LLVM_CXXFILT_BUILD:BOOL=ON

//Whether to build llvm-cxxmap as part of LLVM
LLVM_TOOL_LLVM_CXXMAP_BUILD:BOOL=ON

//Whether to build llvm-c-test as part of LLVM
LLVM_TOOL_LLVM_C_TEST_BUILD:BOOL=ON

//Whether to build llvm-diff as part of LLVM
LLVM_TOOL_LLVM_DIFF_BUILD:BOOL=ON

//Whether to build llvm-dis as part of LLVM
LLVM_TOOL_LLVM_DIS_BUILD:BOOL=ON

//Whether to build llvm-dwarfdump as part of LLVM
LLVM_TOOL_LLVM_DWARFDUMP_BUILD:BOOL=ON

//Whether to build llvm-dwp as part of LLVM
LLVM_TOOL_LLVM_DWP_BUILD:BOOL=ON

//Whether to build llvm-elfabi as part of LLVM
LLVM_TOOL_LLVM_ELFABI_BUILD:BOOL=ON

//Whether to build llvm-exegesis as part of LLVM
LLVM_TOOL_LLVM_EXEGESIS_BUILD:BOOL=ON

//Whether to build llvm-extract as part of LLVM
LLVM_TOOL_LLVM_EXTRACT_BUILD:BOOL=ON

//Whether to build llvm-go as part of LLVM
LLVM_TOOL_LLVM_GO_BUILD:BOOL=ON

//Whether to build llvm-ifs as part of LLVM
LLVM_TOOL_LLVM_IFS_BUILD:BOOL=ON

//Whether to build llvm-isel-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-itanium-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-jitlink as part of LLVM
LLVM_TOOL_LLVM_JITLINK_BUILD:BOOL=ON

//Whether to build LLVM_JITLISTENER as part of LLVM
LLVM_TOOL_LLVM_JITLISTENER_BUILD:BOOL=ON

//Whether to build llvm-link as part of LLVM
LLVM_TOOL_LLVM_LINK_BUILD:BOOL=ON

//Whether to build llvm-lipo as part of LLVM
LLVM_TOOL_LLVM_LIPO_BUILD:BOOL=ON

//Whether to build llvm-lto2 as part of LLVM
LLVM_TOOL_LLVM_LTO2_BUILD:BOOL=ON

//Whether to build llvm-lto as part of LLVM
LLVM_TOOL_LLVM_LTO_BUILD:BOOL=ON

//Whether to build llvm-mca as part of LLVM
LLVM_TOOL_LLVM_MCA_BUILD:BOOL=ON

//Whether to build llvm-mc-assemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-mc as part of LLVM
LLVM_TOOL_LLVM_MC_BUILD:BOOL=ON

//Whether to build llvm-mc-disassemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-microsoft-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-modextract as part of LLVM
LLVM_TOOL_LLVM_MODEXTRACT_BUILD:BOOL=ON

//Whether to build llvm-mt as part of LLVM
LLVM_TOOL_LLVM_MT_BUILD:BOOL=ON

//Whether to build llvm-nm as part of LLVM
LLVM_TOOL_LLVM_NM_BUILD:BOOL=ON

//Whether to build llvm-objcopy as part of LLVM
LLVM_TOOL_LLVM_OBJCOPY_BUILD:BOOL=ON

//Whether to build llvm-objdump as part of LLVM
LLVM_TOOL_LLVM_OBJDUMP_BUILD:BOOL=ON

//Whether to build llvm-opt-fuzzer as part of LLVM
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-opt-report as part of LLVM
LLVM_TOOL_LLVM_OPT_REPORT_BUILD:BOOL=ON

//Whether to build llvm-pdbutil as part of LLVM
LLVM_TOOL_LLVM_PDBUTIL_BUILD:BOOL=ON

//Whether to build llvm-profdata as part of LLVM
LLVM_TOOL_LLVM_PROFDATA_BUILD:BOOL=ON

//Whether to build llvm-rc as part of LLVM
LLVM_TOOL_LLVM_RC_BUILD:BOOL=ON

//Whether to build llvm-readobj as part of LLVM
LLVM_TOOL_LLVM_READOBJ_BUILD:BOOL=ON

//Whether to build llvm-reduce as part of LLVM
LLVM_TOOL_LLVM_REDUCE_BUILD:BOOL=ON

//Whether to build llvm-rtdyld as part of LLVM
LLVM_TOOL_LLVM_RTDYLD_BUILD:BOOL=ON

//Whether to build LLVM_SHLIB as part of LLVM
LLVM_TOOL_LLVM_SHLIB_BUILD:BOOL=ON

//Whether to build llvm-size as part of LLVM
LLVM_TOOL_LLVM_SIZE_BUILD:BOOL=ON

//Whether to build llvm-special-case-list-fuzzer as part of LLVM
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-split as part of LLVM
LLVM_TOOL_LLVM_SPLIT_BUILD:BOOL=ON

//Whether to build llvm-stress as part of LLVM
LLVM_TOOL_LLVM_STRESS_BUILD:BOOL=ON

//Whether to build llvm-strings as part of LLVM
LLVM_TOOL_LLVM_STRINGS_BUILD:BOOL=ON

//Whether to build llvm-symbolizer as part of LLVM
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD:BOOL=ON

//Whether to build llvm-undname as part of LLVM
LLVM_TOOL_LLVM_UNDNAME_BUILD:BOOL=ON

//Whether to build llvm-xray as part of LLVM
LLVM_TOOL_LLVM_XRAY_BUILD:BOOL=ON

//Whether to build llvm-yaml-numeric-parser-fuzzer as part of LLVM
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD:BOOL=ON

//Whether to build lto as part of LLVM
LLVM_TOOL_LTO_BUILD:BOOL=ON

//Whether to build mlir as part of LLVM
LLVM_TOOL_MLIR_BUILD:BOOL=FALSE

//Whether to build obj2yaml as part of LLVM
LLVM_TOOL_OBJ2YAML_BUILD:BOOL=ON

//Whether to build openmp as part of LLVM
LLVM_TOOL_OPENMP_BUILD:BOOL=FALSE

//Whether to build opt as part of LLVM
LLVM_TOOL_OPT_BUILD:BOOL=ON

//Whether to build opt-viewer as part of LLVM
LLVM_TOOL_OPT_VIEWER_BUILD:BOOL=ON

//Whether to build parallel-libs as part of LLVM
LLVM_TOOL_PARALLEL_LIBS_BUILD:BOOL=FALSE

//Whether to build polly as part of LLVM
LLVM_TOOL_POLLY_BUILD:BOOL=FALSE

//Whether to build pstl as part of LLVM
LLVM_TOOL_PSTL_BUILD:BOOL=FALSE

//Whether to build remarks-shlib as part of LLVM
LLVM_TOOL_REMARKS_SHLIB_BUILD:BOOL=ON

//Whether to build sancov as part of LLVM
LLVM_TOOL_SANCOV_BUILD:BOOL=ON

//Whether to build sanstats as part of LLVM
LLVM_TOOL_SANSTATS_BUILD:BOOL=ON

//Whether to build verify-uselistorder as part of LLVM
LLVM_TOOL_VERIFY_USELISTORDER_BUILD:BOOL=ON

//Whether to build vfabi-demangle-fuzzer as part of LLVM
LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build xcode-toolchain as part of LLVM
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD:BOOL=ON

//Whether to build yaml2obj as part of LLVM
LLVM_TOOL_YAML2OBJ_BUILD:BOOL=ON

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Build LLVM using the experimental new pass manager
LLVM_USE_NEWPM:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Use perf JIT interface to inform perf about JIT code
LLVM_USE_PERF:BOOL=OFF

//Use relative paths in debug info
LLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Path to install LLVM utilities (enabled by LLVM_INSTALL_UTILS=ON)
// (defaults to LLVM_TOOLS_INSTALL_DIR)
LLVM_UTILS_INSTALL_DIR:STRING=bin

//Show target and host info when tools are invoked with --version.
LLVM_VERSION_PRINTER_SHOW_HOST_TARGET_INFO:BOOL=ON

//Install directory of the Z3 solver.
LLVM_Z3_INSTALL_DIR:STRING=

//Dependencies for the target
LLVMipo_LIB_DEPENDS:STATIC=general;LLVMAggressiveInstCombine;general;LLVMAnalysis;general;LLVMBitReader;general;LLVMBitWriter;general;LLVMCore;general;LLVMIRReader;general;LLVMInstCombine;general;LLVMInstrumentation;general;LLVMLinker;general;LLVMObject;general;LLVMProfileData;general;LLVMScalarOpts;general;LLVMSupport;general;LLVMTransformUtils;general;LLVMVectorize;

//Dependencies for the target
LTO_LIB_DEPENDS:STATIC=general;LLVMAArch64AsmParser;general;LLVMAMDGPUAsmParser;general;LLVMARMAsmParser;general;LLVMBPFAsmParser;general;LLVMHexagonAsmParser;general;LLVMLanaiAsmParser;general;LLVMMipsAsmParser;general;LLVMMSP430AsmParser;general;LLVMPowerPCAsmParser;general;LLVMRISCVAsmParser;general;LLVMSparcAsmParser;general;LLVMSystemZAsmParser;general;LLVMWebAssemblyAsmParser;general;LLVMX86AsmParser;general;LLVMAArch64CodeGen;general;LLVMAMDGPUCodeGen;general;LLVMARMCodeGen;general;LLVMBPFCodeGen;general;LLVMHexagonCodeGen;general;LLVMLanaiCodeGen;general;LLVMMipsCodeGen;general;LLVMMSP430CodeGen;general;LLVMNVPTXCodeGen;general;LLVMPowerPCCodeGen;general;LLVMRISCVCodeGen;general;LLVMSparcCodeGen;general;LLVMSystemZCodeGen;general;LLVMWebAssemblyCodeGen;general;LLVMX86CodeGen;general;LLVMXCoreCodeGen;general;LLVMAArch64Desc;general;LLVMAMDGPUDesc;general;LLVMARMDesc;general;LLVMBPFDesc;general;LLVMHexagonDesc;general;LLVMLanaiDesc;general;LLVMMipsDesc;general;LLVMMSP430Desc;general;LLVMNVPTXDesc;general;LLVMPowerPCDesc;general;LLVMRISCVDesc;general;LLVMSparcDesc;general;LLVMSystemZDesc;general;LLVMWebAssemblyDesc;general;LLVMX86Desc;general;LLVMXCoreDesc;general;LLVMAArch64Disassembler;general;LLVMAMDGPUDisassembler;general;LLVMARMDisassembler;general;LLVMBPFDisassembler;general;LLVMHexagonDisassembler;general;LLVMLanaiDisassembler;general;LLVMMipsDisassembler;general;LLVMMSP430Disassembler;general;LLVMPowerPCDisassembler;general;LLVMRISCVDisassembler;general;LLVMSparcDisassembler;general;LLVMSystemZDisassembler;general;LLVMWebAssemblyDisassembler;general;LLVMX86Disassembler;general;LLVMXCoreDisassembler;general;LLVMAArch64Info;general;LLVMAMDGPUInfo;general;LLVMARMInfo;general;LLVMBPFInfo;general;LLVMHexagonInfo;general;LLVMLanaiInfo;general;LLVMMipsInfo;general;LLVMMSP430Info;general;LLVMNVPTXInfo;general;LLVMPowerPCInfo;general;LLVMRISCVInfo;general;LLVMSparcInfo;general;LLVMSystemZInfo;general;LLVMWebAssemblyInfo;general;LLVMX86Info;general;LLVMXCoreInfo;general;LLVMBitReader;general;LLVMCore;general;LLVMLTO;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;general;LLVMTarget;

//Path to a program.
OCAMLFIND:FILEPATH=OCAMLFIND-NOTFOUND

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/bin/python

//Failed to find python module 'pygments'
PY_PYGMENTS_FOUND:BOOL=OFF

//Failed to find python module 'pygments.lexers.c_cpp'
PY_PYGMENTS_LEXERS_C_CPP_FOUND:BOOL=OFF

//Failed to find python module 'yaml'
PY_YAML_FOUND:BOOL=OFF

//Dependencies for target
PipSqueak_LIB_DEPENDS:STATIC=

//Dependencies for the target
Remarks_LIB_DEPENDS:STATIC=general;LLVMRemarks;

//Dependencies for target
SecondLib_LIB_DEPENDS:STATIC=

//Dependencies for target
TestPlugin_LIB_DEPENDS:STATIC=

//Path to a file.
Z3_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
Z3_LIBRARIES:FILEPATH=/usr/lib/x86_64-linux-gnu/libz3.so

//Value Computed by CMake
benchmark_BINARY_DIR:STATIC=/home/namrata/libc++-build-10/utils/benchmark

//Dependencies for the target
benchmark_LIB_DEPENDS:STATIC=general;-lpthread;general;/usr/lib/x86_64-linux-gnu/librt.so;

//Value Computed by CMake
benchmark_SOURCE_DIR:STATIC=/home/namrata/libc++-10/llvm/utils/benchmark

//Dependencies for the target
benchmark_main_LIB_DEPENDS:STATIC=general;benchmark;

//Dependencies for the target
cxx_experimental_LIB_DEPENDS:STATIC=general;cxx_shared;general;-nodefaultlibs;general;pthread;general;c;general;m;general;rt;general;gcc_s;

//Dependencies for the target
cxx_shared_LIB_DEPENDS:STATIC=general;-nodefaultlibs;general;pthread;general;c;general;m;general;rt;general;gcc_s;general;-Wl,--whole-archive,-Bstatic;general;cxxabi_static;general;-Wl,-Bdynamic,--no-whole-archive;

//Dependencies for the target
cxx_static_LIB_DEPENDS:STATIC=general;-nodefaultlibs;general;pthread;general;c;general;m;general;rt;general;gcc_s;

//Dependencies for the target
cxxabi_shared_LIB_DEPENDS:STATIC=general;c;general;gcc_s;

//Dependencies for the target
cxxabi_static_LIB_DEPENDS:STATIC=general;c;general;gcc_s;

//Dependencies for the target
gtest_LIB_DEPENDS:STATIC=general;pthread;general;LLVMSupport;

//Dependencies for the target
gtest_main_LIB_DEPENDS:STATIC=general;gtest;general;LLVMSupport;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BENCHMARK_CXX_FLAGS_COVERAGE
BENCHMARK_CXX_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_EXE_LINKER_FLAGS_COVERAGE
BENCHMARK_EXE_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE
BENCHMARK_SHARED_LINKER_FLAGS_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_HEADER
Backtrace_HEADER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_INCLUDE_DIR
Backtrace_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_LIBRARY
Backtrace_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_AR
CMAKE_ASM_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_RANLIB
CMAKE_ASM_COMPILER_RANLIB-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/namrata/libc++-build-10
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/namrata/libc++-10/llvm
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=357
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.10
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
COMPILE_HAVE_GNU_POSIX_REGEX:INTERNAL=FALSE
//Result of TRY_COMPILE
COMPILE_HAVE_POSIX_REGEX:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_STEADY_CLOCK:INTERNAL=TRUE
//Result of TRY_COMPILE
COMPILE_HAVE_THREAD_SAFETY_ATTRIBUTES:INTERNAL=FALSE
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_FREEBSD
CPACK_BINARY_FREEBSD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TZ
CPACK_BINARY_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_RPM
CPACK_SOURCE_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TBZ2
CPACK_SOURCE_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TGZ
CPACK_SOURCE_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TXZ
CPACK_SOURCE_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_TZ
CPACK_SOURCE_TZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG
CXX_SUPPORTS_CLASS_MEMACCESS_FLAG:INTERNAL=
//Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_FDATA_SECTIONS
CXX_SUPPORTS_FDATA_SECTIONS:INTERNAL=1
//Test CXX_SUPPORTS_FFUNCTION_SECTIONS
CXX_SUPPORTS_FFUNCTION_SECTIONS:INTERNAL=1
//Test CXX_SUPPORTS_FPIC
CXX_SUPPORTS_FPIC:INTERNAL=1
//Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG
CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG
CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG
CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_STRING_CONVERSION_FLAG
CXX_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_WERROR_DATE_TIME
CXX_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=1
//Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR
CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR:INTERNAL=1
//Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test C_SUPPORTS_FDATA_SECTIONS
C_SUPPORTS_FDATA_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FFUNCTION_SECTIONS
C_SUPPORTS_FFUNCTION_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FNO_FUNCTION_SECTIONS
C_SUPPORTS_FNO_FUNCTION_SECTIONS:INTERNAL=1
//Test C_SUPPORTS_FPIC
C_SUPPORTS_FPIC:INTERNAL=1
//Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG
C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG:INTERNAL=1
//Test C_SUPPORTS_STRING_CONVERSION_FLAG
C_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=1
//Test C_SUPPORTS_WERROR_DATE_TIME
C_SUPPORTS_WERROR_DATE_TIME:INTERNAL=1
//Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=1
//Test C_WCOMMENT_ALLOWS_LINE_WRAP
C_WCOMMENT_ALLOWS_LINE_WRAP:INTERNAL=1
//Details about finding Backtrace
FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/usr/include][v()]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.26.2()]
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[/usr/bin/python][v2.7.17()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol CPU_COUNT
HAVE_CPU_COUNT:INTERNAL=1
//Have include CrashReporterClient.h
HAVE_CRASHREPORTERCLIENT_H:INTERNAL=
//Test HAVE_CXX_ATOMICS64_WITHOUT_LIB
HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_ATOMICS_WITHOUT_LIB
HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_FLAG_COVERAGE
HAVE_CXX_FLAG_COVERAGE:INTERNAL=1
//Test HAVE_CXX_FLAG_FNO_EXCEPTIONS
HAVE_CXX_FLAG_FNO_EXCEPTIONS:INTERNAL=1
//Test HAVE_CXX_FLAG_FSTRICT_ALIASING
HAVE_CXX_FLAG_FSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC
HAVE_CXX_FLAG_PEDANTIC:INTERNAL=1
//Test HAVE_CXX_FLAG_PEDANTIC_ERRORS
HAVE_CXX_FLAG_PEDANTIC_ERRORS:INTERNAL=1
//Test HAVE_CXX_FLAG_STD_CXX11
HAVE_CXX_FLAG_STD_CXX11:INTERNAL=1
//Test HAVE_CXX_FLAG_WALL
HAVE_CXX_FLAG_WALL:INTERNAL=1
//Test HAVE_CXX_FLAG_WD654
HAVE_CXX_FLAG_WD654:INTERNAL=
//Test HAVE_CXX_FLAG_WEXTRA
HAVE_CXX_FLAG_WEXTRA:INTERNAL=1
//Test HAVE_CXX_FLAG_WFLOAT_EQUAL
HAVE_CXX_FLAG_WFLOAT_EQUAL:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHADOW
HAVE_CXX_FLAG_WSHADOW:INTERNAL=1
//Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32
HAVE_CXX_FLAG_WSHORTEN_64_TO_32:INTERNAL=1
//Test HAVE_CXX_FLAG_WSTRICT_ALIASING
HAVE_CXX_FLAG_WSTRICT_ALIASING:INTERNAL=1
//Test HAVE_CXX_FLAG_WTHREAD_SAFETY
HAVE_CXX_FLAG_WTHREAD_SAFETY:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=
//Have symbol dladdr
HAVE_DLADDR:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have symbol dlopen
HAVE_DLOPEN:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=1
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=1
//Have include histedit.h
HAVE_HISTEDIT_H:INTERNAL=
//Have symbol isatty
HAVE_ISATTY:INTERNAL=1
//Have library dl
HAVE_LIBDL:INTERNAL=1
//Have library pfm
HAVE_LIBPFM_INITIALIZE:INTERNAL=
//Have library pthread
HAVE_LIBPTHREAD:INTERNAL=1
//Have library rt
HAVE_LIBRT:INTERNAL=1
//Have library xar
HAVE_LIBXAR:INTERNAL=
//Have library z
HAVE_LIBZ_Z:INTERNAL=1
//Have include link.h
HAVE_LINK_H:INTERNAL=1
//Have include linux/magic.h
HAVE_LINUX_MAGIC_H:INTERNAL=1
//Have symbol lseek64
HAVE_LSEEK64:INTERNAL=1
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=1
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol posix_fallocate
HAVE_POSIX_FALLOCATE:INTERNAL=1
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=1
//Have symbol pread
HAVE_PREAD:INTERNAL=1
//Have symbol pthread_getname_np
HAVE_PTHREAD_GETNAME_NP:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_GETSPECIFIC:INTERNAL=1
//Have include pthread.h
HAVE_PTHREAD_H:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_MUTEX_LOCK:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_RWLOCK_INIT:INTERNAL=1
//Have symbol pthread_setname_np
HAVE_PTHREAD_SETNAME_NP:INTERNAL=1
//Have symbol sbrk
HAVE_SBRK:INTERNAL=1
//Have symbol sched_getaffinity
HAVE_SCHED_GETAFFINITY:INTERNAL=1
//Have symbol setenv
HAVE_SETENV:INTERNAL=1
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=1
//Have symbol sigaltstack
HAVE_SIGALTSTACK:INTERNAL=1
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Test HAVE_STD_IS_TRIVIALLY_COPYABLE
HAVE_STD_IS_TRIVIALLY_COPYABLE:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Test HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC:INTERNAL=1
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=1
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have library terminfo
HAVE_TERMINFO_TERMINFO:INTERNAL=
//Have library tinfo
HAVE_TERMINFO_TINFO:INTERNAL=1
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=1
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=1
//Have symbol _Unwind_Backtrace
HAVE__UNWIND_BACKTRACE:INTERNAL=1
//Test LIBCXXABI_HAS_COMMENT_LIB_PRAGMA
LIBCXXABI_HAS_COMMENT_LIB_PRAGMA:INTERNAL=1
//Have library c
LIBCXXABI_HAS_CXA_THREAD_ATEXIT_IMPL:INTERNAL=1
//Have library c
LIBCXXABI_HAS_C_LIB:INTERNAL=1
//Have library dl
LIBCXXABI_HAS_DL_LIB:INTERNAL=1
//Have library gcc
LIBCXXABI_HAS_GCC_LIB:INTERNAL=
//Have library gcc_s
LIBCXXABI_HAS_GCC_S_LIB:INTERNAL=1
//Test LIBCXXABI_HAS_NODEFAULTLIBS_FLAG
LIBCXXABI_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NOSTDINCXX_FLAG
LIBCXXABI_HAS_NOSTDINCXX_FLAG:INTERNAL=1
//Have library pthread
LIBCXXABI_HAS_PTHREAD_LIB:INTERNAL=1
//Have library System
LIBCXXABI_HAS_SYSTEM_LIB:INTERNAL=
//Test LIBCXXABI_SUPPORTS_EHSC_FLAG
LIBCXXABI_SUPPORTS_EHSC_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG
LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_FUNWIND_TABLES_FLAG
LIBCXXABI_SUPPORTS_FUNWIND_TABLES_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_PEDANTIC_FLAG
LIBCXXABI_SUPPORTS_PEDANTIC_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WALL_FLAG
LIBCXXABI_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG
LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCONVERSION_FLAG
LIBCXXABI_SUPPORTS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG
LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG
LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG
LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG
LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHADOW_FLAG
LIBCXXABI_SUPPORTS_WSHADOW_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG
LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG
LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG
LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNDEF_FLAG
LIBCXXABI_SUPPORTS_WUNDEF_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WX_FLAG
LIBCXXABI_SUPPORTS_WX_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_W_FLAG
LIBCXXABI_SUPPORTS_W_FLAG:INTERNAL=1
//STRINGS property for variable: LIBCXX_CXX_ABI
LIBCXX_CXX_ABI-STRINGS:INTERNAL=none;default;libcxxabi;libcxxrt;libstdc++;libsupc++;vcruntime
//Have library atomic
LIBCXX_HAS_ATOMIC_LIB:INTERNAL=1
//Test LIBCXX_HAS_COMMENT_LIB_PRAGMA
LIBCXX_HAS_COMMENT_LIB_PRAGMA:INTERNAL=1
//Have library c
LIBCXX_HAS_C_LIB:INTERNAL=1
//Have library gcc_s
LIBCXX_HAS_GCC_S_LIB:INTERNAL=1
//STRINGS property for variable: LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT
LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT-STRINGS:INTERNAL=
//Have library m
LIBCXX_HAS_M_LIB:INTERNAL=1
//Have library pthread
LIBCXX_HAS_PTHREAD_LIB:INTERNAL=1
//Have library rt
LIBCXX_HAS_RT_LIB:INTERNAL=1
//Test LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB
LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//ADVANCED property for variable: LIBCXX_OVERRIDE_DARWIN_INSTALL
LIBCXX_OVERRIDE_DARWIN_INSTALL-ADVANCED:INTERNAL=1
//Test LIBCXX_SUPPORTS_EHSC_FLAG
LIBCXX_SUPPORTS_EHSC_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NODEFAULTLIB_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIB_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_NOSTDINCXX_FLAG
LIBCXX_SUPPORTS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WALL_FLAG
LIBCXX_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_FLAG
LIBCXX_SUPPORTS_WEXTRA_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG
LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_COVERED_SWITCH_DEFAULT_FLAG
LIBCXX_SUPPORTS_WNO_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_ERROR_FLAG
LIBCXX_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_IGNORED_ATTRIBUTES_FLAG
LIBCXX_SUPPORTS_WNO_IGNORED_ATTRIBUTES_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG
LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG
LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_USER_DEFINED_LITERALS_FLAG
LIBCXX_SUPPORTS_WNO_USER_DEFINED_LITERALS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_W_FLAG
LIBCXX_SUPPORTS_W_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_ZL_FLAG
LIBCXX_SUPPORTS_ZL_FLAG:INTERNAL=
//ADVANCED property for variable: LIBXML2_INCLUDE_DIR
LIBXML2_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_LIBRARY
LIBXML2_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_XMLLINT_EXECUTABLE
LIBXML2_XMLLINT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
LLVM_CONFIG_HAS_RTTI:INTERNAL=NO
//ADVANCED property for variable: LLVM_ENABLE_IR_PGO
LLVM_ENABLE_IR_PGO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_ENABLE_PROJECTS_USED
LLVM_ENABLE_PROJECTS_USED-ADVANCED:INTERNAL=1
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//Test LLVM_LIBSTDCXX_MIN
LLVM_LIBSTDCXX_MIN:INTERNAL=1
//Test LLVM_LIBSTDCXX_SOFT_ERROR
LLVM_LIBSTDCXX_SOFT_ERROR:INTERNAL=1
//ADVANCED property for variable: LLVM_TARGET_TRIPLE_ENV
LLVM_TARGET_TRIPLE_ENV-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOLS_INSTALL_DIR
LLVM_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_BUILD
LLVM_TOOL_BUGPOINT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_PASSES_BUILD
LLVM_TOOL_BUGPOINT_PASSES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_DSYMUTIL_BUILD
LLVM_TOOL_DSYMUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_GOLD_BUILD
LLVM_TOOL_GOLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLC_BUILD
LLVM_TOOL_LLC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLI_BUILD
LLVM_TOOL_LLI_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AR_BUILD
LLVM_TOOL_LLVM_AR_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_BUILD
LLVM_TOOL_LLVM_AS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_FUZZER_BUILD
LLVM_TOOL_LLVM_AS_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_BCANALYZER_BUILD
LLVM_TOOL_LLVM_BCANALYZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CAT_BUILD
LLVM_TOOL_LLVM_CAT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CFI_VERIFY_BUILD
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CONFIG_BUILD
LLVM_TOOL_LLVM_CONFIG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_COV_BUILD
LLVM_TOOL_LLVM_COV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CVTRES_BUILD
LLVM_TOOL_LLVM_CVTRES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXDUMP_BUILD
LLVM_TOOL_LLVM_CXXDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXFILT_BUILD
LLVM_TOOL_LLVM_CXXFILT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXMAP_BUILD
LLVM_TOOL_LLVM_CXXMAP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_C_TEST_BUILD
LLVM_TOOL_LLVM_C_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIFF_BUILD
LLVM_TOOL_LLVM_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIS_BUILD
LLVM_TOOL_LLVM_DIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWARFDUMP_BUILD
LLVM_TOOL_LLVM_DWARFDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWP_BUILD
LLVM_TOOL_LLVM_DWP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ELFABI_BUILD
LLVM_TOOL_LLVM_ELFABI_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXEGESIS_BUILD
LLVM_TOOL_LLVM_EXEGESIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXTRACT_BUILD
LLVM_TOOL_LLVM_EXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_GO_BUILD
LLVM_TOOL_LLVM_GO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_IFS_BUILD
LLVM_TOOL_LLVM_IFS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_JITLINK_BUILD
LLVM_TOOL_LLVM_JITLINK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_JITLISTENER_BUILD
LLVM_TOOL_LLVM_JITLISTENER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LINK_BUILD
LLVM_TOOL_LLVM_LINK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LIPO_BUILD
LLVM_TOOL_LLVM_LIPO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO2_BUILD
LLVM_TOOL_LLVM_LTO2_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO_BUILD
LLVM_TOOL_LLVM_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MCA_BUILD
LLVM_TOOL_LLVM_MCA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_BUILD
LLVM_TOOL_LLVM_MC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MODEXTRACT_BUILD
LLVM_TOOL_LLVM_MODEXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MT_BUILD
LLVM_TOOL_LLVM_MT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_NM_BUILD
LLVM_TOOL_LLVM_NM_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJCOPY_BUILD
LLVM_TOOL_LLVM_OBJCOPY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJDUMP_BUILD
LLVM_TOOL_LLVM_OBJDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_FUZZER_BUILD
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_REPORT_BUILD
LLVM_TOOL_LLVM_OPT_REPORT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PDBUTIL_BUILD
LLVM_TOOL_LLVM_PDBUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PROFDATA_BUILD
LLVM_TOOL_LLVM_PROFDATA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RC_BUILD
LLVM_TOOL_LLVM_RC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_READOBJ_BUILD
LLVM_TOOL_LLVM_READOBJ_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_REDUCE_BUILD
LLVM_TOOL_LLVM_REDUCE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RTDYLD_BUILD
LLVM_TOOL_LLVM_RTDYLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SHLIB_BUILD
LLVM_TOOL_LLVM_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SIZE_BUILD
LLVM_TOOL_LLVM_SIZE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPLIT_BUILD
LLVM_TOOL_LLVM_SPLIT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRESS_BUILD
LLVM_TOOL_LLVM_STRESS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRINGS_BUILD
LLVM_TOOL_LLVM_STRINGS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SYMBOLIZER_BUILD
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_UNDNAME_BUILD
LLVM_TOOL_LLVM_UNDNAME_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_XRAY_BUILD
LLVM_TOOL_LLVM_XRAY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LTO_BUILD
LLVM_TOOL_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OBJ2YAML_BUILD
LLVM_TOOL_OBJ2YAML_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_BUILD
LLVM_TOOL_OPT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_VIEWER_BUILD
LLVM_TOOL_OPT_VIEWER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_REMARKS_SHLIB_BUILD
LLVM_TOOL_REMARKS_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANCOV_BUILD
LLVM_TOOL_SANCOV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANSTATS_BUILD
LLVM_TOOL_SANSTATS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_VERIFY_USELISTORDER_BUILD
LLVM_TOOL_VERIFY_USELISTORDER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_XCODE_TOOLCHAIN_BUILD
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_YAML2OBJ_BUILD
LLVM_TOOL_YAML2OBJ_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_USE_NEWPM
LLVM_USE_NEWPM-ADVANCED:INTERNAL=1
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=1
//ADVANCED property for variable: LLVM_UTILS_INSTALL_DIR
LLVM_UTILS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OCAMLFIND
OCAMLFIND-ADVANCED:INTERNAL=1
PC_LIBXML_CFLAGS:INTERNAL=
PC_LIBXML_CFLAGS_I:INTERNAL=
PC_LIBXML_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_FOUND:INTERNAL=
PC_LIBXML_INCLUDEDIR:INTERNAL=
PC_LIBXML_LIBDIR:INTERNAL=
PC_LIBXML_LIBS:INTERNAL=
PC_LIBXML_LIBS_L:INTERNAL=
PC_LIBXML_LIBS_OTHER:INTERNAL=
PC_LIBXML_LIBS_PATHS:INTERNAL=
PC_LIBXML_PREFIX:INTERNAL=
PC_LIBXML_STATIC_CFLAGS:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_I:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBDIR:INTERNAL=
PC_LIBXML_STATIC_LIBS:INTERNAL=
PC_LIBXML_STATIC_LIBS_L:INTERNAL=
PC_LIBXML_STATIC_LIBS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBS_PATHS:INTERNAL=
PC_LIBXML_VERSION:INTERNAL=
PC_LIBXML_libxml-2.0_INCLUDEDIR:INTERNAL=
PC_LIBXML_libxml-2.0_LIBDIR:INTERNAL=
PC_LIBXML_libxml-2.0_PREFIX:INTERNAL=
PC_LIBXML_libxml-2.0_VERSION:INTERNAL=
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of TRY_RUN
RUN_HAVE_POSIX_REGEX:INTERNAL=0
//Result of TRY_RUN
RUN_HAVE_STEADY_CLOCK:INTERNAL=0
//Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG
SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG:INTERNAL=1
//Test SUPPORTS_VARIADIC_MACROS_FLAG
SUPPORTS_VARIADIC_MACROS_FLAG:INTERNAL=1
//Result of TRY_COMPILE
Z3_COMPILED:INTERNAL=TRUE
//ADVANCED property for variable: Z3_INCLUDE_DIR
Z3_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Z3_LIBRARIES
Z3_LIBRARIES-ADVANCED:INTERNAL=1
//Result of TRY_RUN
Z3_RETURNCODE:INTERNAL=0
//Have symbol backtrace
_Backtrace_SYM_FOUND:INTERNAL=1
__pkg_config_checked_PC_LIBXML:INTERNAL=1
algorithms.partition_point_REPORTED:INTERNAL=ON
algorithms_REPORTED:INTERNAL=ON
allocation_REPORTED:INTERNAL=ON
deque_REPORTED:INTERNAL=ON
filesystem_REPORTED:INTERNAL=ON
function_REPORTED:INTERNAL=ON
//Have symbol os_signpost_interval_begin
macos_signposts_available:INTERNAL=
ordered_set_REPORTED:INTERNAL=ON
string_REPORTED:INTERNAL=ON
stringstream_REPORTED:INTERNAL=ON
unordered_set_operations_REPORTED:INTERNAL=ON
util_smartptr_REPORTED:INTERNAL=ON
vector_operations_REPORTED:INTERNAL=ON

