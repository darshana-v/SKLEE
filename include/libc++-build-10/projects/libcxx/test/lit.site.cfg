## Autogenerated by libcxx configuration.
# Do not edit!
config.cxx_under_test           = "/usr/local/bin/wllvm++"
config.project_obj_root         = "/home/namrata/libc++-build-10"
config.libcxx_src_root          = "/home/namrata/libc++-10/llvm/projects/libcxx"
config.libcxx_obj_root          = "/home/namrata/libc++-build-10/projects/libcxx"
config.cxx_library_root         = "/home/namrata/libc++-build-10/./lib"
config.enable_exceptions        = True
config.enable_experimental      = True
config.enable_filesystem        = True
config.enable_rtti              = True
config.enable_shared            = True
config.enable_32bit             = False
config.cxx_abi                  = "none"
config.use_sanitizer            = ""
config.sanitizer_library        = ""
config.abi_library_path         = ""
config.configuration_variant    = "libcxx"
config.host_triple              = "x86_64-unknown-linux-gnu"
config.target_triple            = "x86_64-unknown-linux-gnu"
config.use_target               = bool("")
config.sysroot                  = ""
config.gcc_toolchain            = ""
config.generate_coverage        = False
config.target_info              = "libcxx.test.target_info.LocalTI"
config.test_linker_flags        = ""
config.test_compiler_flags      = ""

config.executor                 = "None"
config.llvm_unwinder            = False
config.builtins_library         = ""
config.has_libatomic            = True
config.use_libatomic            = False
config.debug_build              = False
config.libcxxabi_shared         = True
config.cxx_ext_threads          = False
config.pstl_src_root            = "" if False else None
config.pstl_obj_root            = "" if False else None
config.libcxx_gdb               = ""

# Code signing
config.llvm_codesign_identity   = ""

# Let the main config do the real work.
config.loaded_site_config = True
lit_config.load_config(config, "/home/namrata/libc++-10/llvm/projects/libcxx/test/lit.cfg")
