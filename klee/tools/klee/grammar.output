Terminals unused in grammar

    SWITCH
    IMPORT
    AS
    DEFAULT
    CASE
    BEG_TAB
    END_TAB
    LIBRARY
    INTERFACE
    SEND
    CALL
    TRANSFER
    SPACE
    HEX
    MULTIPLY
    DOLLAR
    AMP
    NUMBER_LITERAL
    VERSION
    FIXED
    UFIXED
    TEXT
    COMMENT
    FROM


State 22 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 204 conflicts: 15 shift/reduce
State 229 conflicts: 2 shift/reduce
State 268 conflicts: 15 shift/reduce
State 269 conflicts: 15 shift/reduce
State 271 conflicts: 15 shift/reduce
State 327 conflicts: 1 shift/reduce
State 341 conflicts: 15 shift/reduce
State 362 conflicts: 37 shift/reduce
State 365 conflicts: 38 shift/reduce
State 383 conflicts: 37 shift/reduce
State 387 conflicts: 37 shift/reduce


Grammar

    0 $accept: SourceUnit $end

    1 $@1: %empty

    2 SourceUnit: ContractDefinition $@1 SourceUnit
    3           | ContractDefinition
    4           | PragmaDirective SourceUnit

    5 PragmaDirective: PRAGMA SOLIDITY SEMICOLON

    6 $@2: %empty

    7 ContractDefinition: CONTRACT IDENTIFIER L_CURLY_B $@2 ContractPart R_CURLY_B

    8 $@3: %empty

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass L_CURLY_B $@3 ContractPart R_CURLY_B

   10 BaseClass: IDENTIFIER
   11          | IDENTIFIER COMMA BaseClass

   12 ContractPart: StateVariableDeclaration ContractPart
   13             | FunctionDefinition ContractPart
   14             | UsingForDeclaration ContractPart
   15             | StructDefinition ContractPart
   16             | ModifierDefinition ContractPart
   17             | EventDefinition ContractPart
   18             | EnumDefinition ContractPart
   19             | %empty

   20 UsingForDeclaration: USING IDENTIFIER FOR STAR SEMICOLON
   21                    | USING IDENTIFIER FOR TypeName SEMICOLON

   22 StructDefinition: STRUCT IDENTIFIER L_CURLY_B Vars R_CURLY_B

   23 Vars: VariableDeclaration SEMICOLON Vars
   24     | VariableDeclaration SEMICOLON

   25 StorageLocation: MEMORY
   26                | STORAGE
   27                | CALLDATA

   28 ModifierDefinition: MODIFIER IDENTIFIER ParameterList Block
   29                   | MODIFIER IDENTIFIER Block

   30 ModifierInvocation: IDENTIFIER
   31                   | IDENTIFIER L_PAREN ExpressionList R_PAREN
   32                   | IDENTIFIER L_PAREN R_PAREN

   33 EventDefinition: EVENT IDENTIFIER EventParameterList ANONYMOUS SEMICOLON
   34                | EVENT IDENTIFIER EventParameterList SEMICOLON

   35 EventParameterList: L_PAREN EventParameter R_PAREN
   36                   | L_PAREN R_PAREN

   37 EventParameter: TypeName INDEXED IDENTIFIER COMMA EventParameter
   38               | TypeName INDEXED IDENTIFIER
   39               | TypeName IDENTIFIER COMMA EventParameter
   40               | TypeName IDENTIFIER
   41               | TypeName

   42 EnumValue: IDENTIFIER

   43 EnumDefinition: ENUM IDENTIFIER L_CURLY_B R_CURLY_B
   44               | ENUM IDENTIFIER L_CURLY_B EnumValue EnumValues R_CURLY_B

   45 EnumValues: COMMA EnumValue EnumValues
   46           | %empty

   47 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER SEMICOLON
   48                         | TypeName VariableAttribute IDENTIFIER EQUAL Expression SEMICOLON

   49 StateMutability: PURE
   50                | VIEW
   51                | PAYABLE

   52 Qualifier: PUBLIC
   53          | PRIVATE
   54          | CONSTANT
   55          | INTERNAL
   56          | EXTERNAL

   57 VariableAttribute: Qualifier VariableAttribute
   58                  | StateMutability VariableAttribute
   59                  | %empty

   60 FunctionAttribute: Qualifier FunctionAttribute
   61                  | StateMutability FunctionAttribute
   62                  | ModifierInvocation FunctionAttribute
   63                  | %empty

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute RETURNS ReturnList Block
   65                   | FUNCTION IDENTIFIER ParameterList FunctionAttribute Block
   66                   | CONSTRUCTOR ParameterList FunctionAttribute Block
   67                   | FUNCTION L_PAREN R_PAREN FunctionAttribute Block

   68 ParameterList: L_PAREN Parameter R_PAREN

   69 $@4: %empty

   70 Parameter: TypeName IDENTIFIER COMMA $@4 Parameter
   71          | TypeName StorageLocation IDENTIFIER
   72          | TypeName IDENTIFIER
   73          | TypeName
   74          | %empty

   75 ReturnList: L_PAREN Parameter2 R_PAREN

   76 Parameter2: TypeName
   77           | TypeName IDENTIFIER
   78           | TypeName COMMA Parameter2
   79           | TypeName IDENTIFIER COMMA Parameter2

   80 VariableDeclaration: TypeName StorageLocation IDENTIFIER EQUAL Expression
   81                    | TypeName StorageLocation IDENTIFIER
   82                    | TypeName IDENTIFIER
   83                    | TypeName IDENTIFIER EQUAL Expression

   84 TypeName: ElementaryTypeName
   85         | Mapping
   86         | UserDefinedTypeName
   87         | ArrayTypeName
   88         | FunctionTypeName
   89         | ADDRESS PAYABLE

   90 UserDefinedTypeName: IDENTIFIER

   91 Mapping: MAPPING L_PAREN ElementaryTypeName IMPLIES TypeName R_PAREN

   92 ArrayTypeName: TypeName OPT_L OPT_R
   93              | TypeName OPT_L Expression OPT_R

   94 FunctionTypeName: FUNCTION ParameterList RETURNS ParameterList

   95 Block: L_CURLY_B Statement R_CURLY_B
   96      | SEMICOLON

   97 Statement: Statement IfStatement
   98          | Statement WhileStatement
   99          | Statement ForStatement
  100          | L_CURLY_B Statement R_CURLY_B
  101          | Statement SimpleStatement SEMICOLON
  102          | Statement DoWhileStatement SEMICOLON
  103          | Statement CONTINUE SEMICOLON
  104          | Statement BREAK SEMICOLON
  105          | Statement RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement RETURN Expression SEMICOLON
  107          | Statement RETURN SEMICOLON
  108          | Statement THROW SEMICOLON
  109          | Statement EmitStatement SEMICOLON
  110          | Statement UNDERSCORE
  111          | Statement UNDERSCORE SEMICOLON
  112          | Statement AssertStatement SEMICOLON
  113          | %empty

  114 AssertStatement: REQUIRE L_PAREN Expression R_PAREN
  115                | ASSERT L_PAREN Expression R_PAREN
  116                | REQUIRE L_PAREN Expression COMMA STRING_LITERAL R_PAREN
  117                | ASSERT L_PAREN Expression COMMA STRING_LITERAL R_PAREN

  118 ExpressionStatement: Expression

  119 IfStatement: IF L_PAREN Expression R_PAREN Statement
  120            | IF L_PAREN Expression R_PAREN Statement ELSE Statement

  121 WhileStatement: WHILE L_PAREN Expression R_PAREN Statement

  122 SimpleStatement: Expression
  123                | VariableDefinition

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN Statement

  125 DoWhileStatement: DO Statement WHILE L_PAREN Expression R_PAREN

  126 EmitStatement: EMIT FunctionCall

  127 VariableDefinition: VariableDeclaration
  128                   | L_PAREN VariableDeclaration VarDec2 R_PAREN EQUAL Expression
  129                   | L_PAREN VarDec2 R_PAREN

  130 VarDec2: COMMA VariableDeclaration
  131        | %empty

  132 Expression: Expression Unary1
  133           | NewExpression
  134           | IndexAccess
  135           | FunctionCall
  136           | MemberAccess
  137           | OPT_L ExpressionList OPT_R
  138           | L_PAREN Expression R_PAREN
  139           | Unary2 Expression
  140           | Expression LOG_OP Expression
  141           | Expression QUES_MARK Expression COLON Expression
  142           | Expression Operator Expression
  143           | Expression REL_OP Expression
  144           | PrimaryExpression

  145 Operator: EQUAL
  146         | PLUS
  147         | MINUS
  148         | DIVIDE
  149         | STAR
  150         | MOD
  151         | EQUAL2
  152         | CARET

  153 Unary1: PLUS2
  154       | MINUS2

  155 Unary2: PLUS2
  156       | PLUS
  157       | MINUS
  158       | TILDE
  159       | DELETE
  160       | MINUS2
  161       | NOT

  162 PrimaryExpression: BooleanLiteral
  163                  | NumberLiteral
  164                  | STRING_LITERAL
  165                  | IDENTIFIER
  166                  | ElementaryTypeName

  167 ExpressionList: Expression
  168               | Expression COMMA ExpressionList

  169 NameValue: COMMA IDENTIFIER COLON Expression NameValue
  170          | %empty

  171 NameValueList: IDENTIFIER COLON Expression NameValue

  172 FunctionCallArguments: L_CURLY_B NameValueList R_CURLY_B
  173                      | L_CURLY_B R_CURLY_B
  174                      | ExpressionList

  175 FunctionCall: Expression L_PAREN FunctionCallArguments R_PAREN
  176             | Expression L_PAREN R_PAREN

  177 NewExpression: NEW TypeName

  178 MemberAccess: Expression DOT IDENTIFIER
  179             | IDENTIFIER DOT IDENTIFIER
  180             | IDENTIFIER DOT IndexAccess
  181             | Expression DOT IndexAccess

  182 IndexAccess: IDENTIFIER OPT_L Expression OPT_R IndexAccess2
  183            | IDENTIFIER OPT_L OPT_R

  184 IndexAccess2: OPT_L Expression OPT_R
  185             | OPT_L OPT_R
  186             | %empty

  187 BooleanLiteral: TRUE
  188               | FALSE

  189 NumberLiteral: HEX_NUMBER
  190              | DECIMAL_NUMBER
  191              | HEX_NUMBER NumberUnit
  192              | DECIMAL_NUMBER NumberUnit

  193 NumberUnit: WEI
  194           | SZABO
  195           | FINNEY
  196           | ETHER
  197           | SECONDS
  198           | MINUTES
  199           | HOURS
  200           | DAYS
  201           | WEEKS
  202           | YEARS

  203 ElementaryTypeName: ADDRESS
  204                   | BOOL
  205                   | STRING
  206                   | INT
  207                   | UINT
  208                   | BYTE
  209                   | AUTO


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ENUM <var> (258) 43 44
    STRUCT <var> (259) 22
    WHILE <var> (260) 121 125
    DO <var> (261) 125
    FOR <var> (262) 20 21 124
    IF <var> (263) 119 120
    CONTINUE <var> (264) 103
    BREAK <var> (265) 104
    RETURN <var> (266) 105 106 107
    SWITCH <var> (267)
    IMPORT <var> (268)
    CONTRACT <var> (269) 7 9
    AS <var> (270)
    PUBLIC <var> (271) 52
    PRIVATE <var> (272) 53
    FUNCTION <var> (273) 64 65 67 94
    INTERNAL <var> (274) 55
    CONSTANT <var> (275) 54
    DEFAULT <var> (276)
    CASE <var> (277)
    BEG_TAB <var> (278)
    END_TAB <var> (279)
    L_CURLY_B <var> (280) 7 9 22 43 44 95 100 172 173
    R_CURLY_B <var> (281) 7 9 22 43 44 95 100 172 173
    PRAGMA <var> (282) 5
    LIBRARY <var> (283)
    INTERFACE <var> (284)
    MODIFIER <var> (285) 28 29
    IS <var> (286) 9
    MEMORY <var> (287) 25
    STORAGE <var> (288) 26
    CALLDATA <var> (289) 27
    SEND <var> (290)
    CALL <var> (291)
    TRANSFER <var> (292)
    ADDRESS <var> (293) 89 203
    DOT <var> (294) 178 179 180 181
    BOOL <var> (295) 204
    OPT_L <var> (296) 92 93 137 182 183 184 185
    OPT_R <var> (297) 92 93 137 182 183 184 185
    SPACE <var> (298)
    BYTE <var> (299) 208
    HEX <var> (300)
    PURE <var> (301) 49
    VIEW <var> (302) 50
    PAYABLE <var> (303) 51 89
    MAPPING <var> (304) 91
    IMPLIES <var> (305) 91
    HEX_NUMBER <var> (306) 189 191
    STRING_LITERAL <var> (307) 116 117 164
    PLUS <var> (308) 146 156
    MULTIPLY <var> (309)
    EQUAL <var> (310) 48 80 83 128 145
    EQUAL2 <var> (311) 151
    PLUS2 <var> (312) 153 155
    MINUS2 <var> (313) 154 160
    L_PAREN <var> (314) 31 32 35 36 67 68 75 91 105 114 115 116 117 119 120 121 124 125 128 129 138 175 176
    DOLLAR <var> (315)
    AMP <var> (316)
    CARET <var> (317) 152
    MOD <var> (318) 150
    NUMBER_LITERAL <var> (319)
    IDENTIFIER <var> (320) 7 9 10 11 20 21 22 28 29 30 31 32 33 34 37 38 39 40 42 43 44 47 48 64 65 70 71 72 77 79 80 81 82 83 90 165 169 171 178 179 180 182 183
    DECIMAL_NUMBER <var> (321) 190 192
    REL_OP <var> (322) 143
    LOG_OP <var> (323) 140
    QUES_MARK <var> (324) 141
    COLON <var> (325) 141 169 171
    EMIT <var> (326) 126
    UINT <var> (327) 207
    SOLIDITY <var> (328) 5
    VERSION <var> (329)
    EVENT <var> (330) 33 34
    INDEXED <var> (331) 37 38
    FINNEY <var> (332) 195
    ETHER <var> (333) 196
    SECONDS <var> (334) 197
    MINUTES <var> (335) 198
    HOURS <var> (336) 199
    DAYS <var> (337) 200
    WEEKS <var> (338) 201
    YEARS <var> (339) 202
    UNDERSCORE <var> (340) 110 111
    ANONYMOUS <var> (341) 33
    USING <var> (342) 20 21
    NOT <var> (343) 161
    FIXED <var> (344)
    UFIXED <var> (345)
    R_PAREN <var> (346) 31 32 35 36 67 68 75 91 105 114 115 116 117 119 120 121 124 125 128 129 138 175 176
    COMMA <var> (347) 11 37 39 45 70 78 79 116 117 130 168 169
    STAR <var> (348) 20 149
    TRUE <var> (349) 187
    FALSE <var> (350) 188
    TEXT <var> (351)
    CONSTRUCTOR <var> (352) 66
    DELETE <var> (353) 159
    REQUIRE <var> (354) 114 116
    ASSERT <var> (355) 115 117
    AUTO <var> (356) 209
    ELSE <var> (357) 120
    THROW <var> (358) 108
    EXTERNAL <var> (359) 56
    RETURNS <var> (360) 64 94
    COMMENT <var> (361)
    STRING <var> (362) 205
    INT <var> (363) 206
    NEW <var> (364) 177
    FROM <var> (365)
    MINUS <var> (366) 147 157
    DIVIDE <var> (367) 148
    WEI <var> (368) 193
    SZABO <var> (369) 194
    TILDE <var> (370) 158
    SEMICOLON <var> (371) 5 20 21 23 24 33 34 47 48 96 101 102 103 104 105 106 107 108 109 111 112 124


Nonterminals, with rules where they appear

    $accept (117)
        on left: 0
    SourceUnit <var> (118)
        on left: 2 3 4
        on right: 0 2 4
    $@1 (119)
        on left: 1
        on right: 2
    PragmaDirective (120)
        on left: 5
        on right: 4
    ContractDefinition <var> (121)
        on left: 7 9
        on right: 2 3
    $@2 (122)
        on left: 6
        on right: 7
    $@3 (123)
        on left: 8
        on right: 9
    BaseClass <var> (124)
        on left: 10 11
        on right: 9 11
    ContractPart <var> (125)
        on left: 12 13 14 15 16 17 18 19
        on right: 7 9 12 13 14 15 16 17 18
    UsingForDeclaration <var> (126)
        on left: 20 21
        on right: 14
    StructDefinition <var> (127)
        on left: 22
        on right: 15
    Vars <var> (128)
        on left: 23 24
        on right: 22 23
    StorageLocation <var> (129)
        on left: 25 26 27
        on right: 71 80 81
    ModifierDefinition <var> (130)
        on left: 28 29
        on right: 16
    ModifierInvocation <var> (131)
        on left: 30 31 32
        on right: 62
    EventDefinition <var> (132)
        on left: 33 34
        on right: 17
    EventParameterList <var> (133)
        on left: 35 36
        on right: 33 34
    EventParameter <var> (134)
        on left: 37 38 39 40 41
        on right: 35 37 39
    EnumValue <var> (135)
        on left: 42
        on right: 44 45
    EnumDefinition <var> (136)
        on left: 43 44
        on right: 18
    EnumValues <var> (137)
        on left: 45 46
        on right: 44 45
    StateVariableDeclaration <var> (138)
        on left: 47 48
        on right: 12
    StateMutability <var> (139)
        on left: 49 50 51
        on right: 58 61
    Qualifier <var> (140)
        on left: 52 53 54 55 56
        on right: 57 60
    VariableAttribute <var> (141)
        on left: 57 58 59
        on right: 47 48 57 58
    FunctionAttribute <var> (142)
        on left: 60 61 62 63
        on right: 60 61 62 64 65 66 67
    FunctionDefinition <var> (143)
        on left: 64 65 66 67
        on right: 13
    ParameterList <var> (144)
        on left: 68
        on right: 28 64 65 66 94
    Parameter <var> (145)
        on left: 70 71 72 73 74
        on right: 68 70
    $@4 (146)
        on left: 69
        on right: 70
    ReturnList <var> (147)
        on left: 75
        on right: 64
    Parameter2 <var> (148)
        on left: 76 77 78 79
        on right: 75 78 79
    VariableDeclaration <var> (149)
        on left: 80 81 82 83
        on right: 23 24 127 128 130
    TypeName <var> (150)
        on left: 84 85 86 87 88 89
        on right: 21 37 38 39 40 41 47 48 70 71 72 73 76 77 78 79 80 81 82 83 91 92 93 177
    UserDefinedTypeName <var> (151)
        on left: 90
        on right: 86
    Mapping <var> (152)
        on left: 91
        on right: 85
    ArrayTypeName <var> (153)
        on left: 92 93
        on right: 87
    FunctionTypeName <var> (154)
        on left: 94
        on right: 88
    Block <var> (155)
        on left: 95 96
        on right: 28 29 64 65 66 67
    Statement <var> (156)
        on left: 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 95 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 119 120 121 124 125
    AssertStatement <var> (157)
        on left: 114 115 116 117
        on right: 112
    ExpressionStatement <var> (158)
        on left: 118
        on right: 124
    IfStatement <var> (159)
        on left: 119 120
        on right: 97
    WhileStatement <var> (160)
        on left: 121
        on right: 98
    SimpleStatement <var> (161)
        on left: 122 123
        on right: 101 124
    ForStatement <var> (162)
        on left: 124
        on right: 99
    DoWhileStatement <var> (163)
        on left: 125
        on right: 102
    EmitStatement <var> (164)
        on left: 126
        on right: 109
    VariableDefinition <var> (165)
        on left: 127 128 129
        on right: 123
    VarDec2 <var> (166)
        on left: 130 131
        on right: 128 129
    Expression <var> (167)
        on left: 132 133 134 135 136 137 138 139 140 141 142 143 144
        on right: 48 80 83 93 106 114 115 116 117 118 119 120 121 122 124 125 128 132 138 139 140 141 142 143 167 168 169 171 175 176 178 181 182 184
    Operator <var> (168)
        on left: 145 146 147 148 149 150 151 152
        on right: 142
    Unary1 <var> (169)
        on left: 153 154
        on right: 132
    Unary2 <var> (170)
        on left: 155 156 157 158 159 160 161
        on right: 139
    PrimaryExpression <var> (171)
        on left: 162 163 164 165 166
        on right: 144
    ExpressionList <var> (172)
        on left: 167 168
        on right: 31 105 137 168 174
    NameValue <var> (173)
        on left: 169 170
        on right: 169 171
    NameValueList <var> (174)
        on left: 171
        on right: 172
    FunctionCallArguments <var> (175)
        on left: 172 173 174
        on right: 175
    FunctionCall <var> (176)
        on left: 175 176
        on right: 126 135
    NewExpression <var> (177)
        on left: 177
        on right: 133
    MemberAccess <var> (178)
        on left: 178 179 180 181
        on right: 136
    IndexAccess <var> (179)
        on left: 182 183
        on right: 134 180 181
    IndexAccess2 <var> (180)
        on left: 184 185 186
        on right: 182
    BooleanLiteral <var> (181)
        on left: 187 188
        on right: 162
    NumberLiteral <var> (182)
        on left: 189 190 191 192
        on right: 163
    NumberUnit <var> (183)
        on left: 193 194 195 196 197 198 199 200 201 202
        on right: 191 192
    ElementaryTypeName <var> (184)
        on left: 203 204 205 206 207 208 209
        on right: 84 91 166


State 0

    0 $accept: • SourceUnit $end

    CONTRACT  shift, and go to state 1
    PRAGMA    shift, and go to state 2

    SourceUnit          go to state 3
    PragmaDirective     go to state 4
    ContractDefinition  go to state 5


State 1

    7 ContractDefinition: CONTRACT • IDENTIFIER L_CURLY_B $@2 ContractPart R_CURLY_B
    9                   | CONTRACT • IDENTIFIER IS BaseClass L_CURLY_B $@3 ContractPart R_CURLY_B

    IDENTIFIER  shift, and go to state 6


State 2

    5 PragmaDirective: PRAGMA • SOLIDITY SEMICOLON

    SOLIDITY  shift, and go to state 7


State 3

    0 $accept: SourceUnit • $end

    $end  shift, and go to state 8


State 4

    4 SourceUnit: PragmaDirective • SourceUnit

    CONTRACT  shift, and go to state 1
    PRAGMA    shift, and go to state 2

    SourceUnit          go to state 9
    PragmaDirective     go to state 4
    ContractDefinition  go to state 5


State 5

    2 SourceUnit: ContractDefinition • $@1 SourceUnit
    3           | ContractDefinition •

    $end      reduce using rule 3 (SourceUnit)
    $default  reduce using rule 1 ($@1)

    $@1  go to state 10


State 6

    7 ContractDefinition: CONTRACT IDENTIFIER • L_CURLY_B $@2 ContractPart R_CURLY_B
    9                   | CONTRACT IDENTIFIER • IS BaseClass L_CURLY_B $@3 ContractPart R_CURLY_B

    L_CURLY_B  shift, and go to state 11
    IS         shift, and go to state 12


State 7

    5 PragmaDirective: PRAGMA SOLIDITY • SEMICOLON

    SEMICOLON  shift, and go to state 13


State 8

    0 $accept: SourceUnit $end •

    $default  accept


State 9

    4 SourceUnit: PragmaDirective SourceUnit •

    $default  reduce using rule 4 (SourceUnit)


State 10

    2 SourceUnit: ContractDefinition $@1 • SourceUnit

    CONTRACT  shift, and go to state 1
    PRAGMA    shift, and go to state 2

    SourceUnit          go to state 14
    PragmaDirective     go to state 4
    ContractDefinition  go to state 5


State 11

    7 ContractDefinition: CONTRACT IDENTIFIER L_CURLY_B • $@2 ContractPart R_CURLY_B

    $default  reduce using rule 6 ($@2)

    $@2  go to state 15


State 12

    9 ContractDefinition: CONTRACT IDENTIFIER IS • BaseClass L_CURLY_B $@3 ContractPart R_CURLY_B

    IDENTIFIER  shift, and go to state 16

    BaseClass  go to state 17


State 13

    5 PragmaDirective: PRAGMA SOLIDITY SEMICOLON •

    $default  reduce using rule 5 (PragmaDirective)


State 14

    2 SourceUnit: ContractDefinition $@1 SourceUnit •

    $default  reduce using rule 2 (SourceUnit)


State 15

    7 ContractDefinition: CONTRACT IDENTIFIER L_CURLY_B $@2 • ContractPart R_CURLY_B

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 34
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 16

   10 BaseClass: IDENTIFIER •
   11          | IDENTIFIER • COMMA BaseClass

    COMMA  shift, and go to state 48

    $default  reduce using rule 10 (BaseClass)


State 17

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass • L_CURLY_B $@3 ContractPart R_CURLY_B

    L_CURLY_B  shift, and go to state 49


State 18

   43 EnumDefinition: ENUM • IDENTIFIER L_CURLY_B R_CURLY_B
   44               | ENUM • IDENTIFIER L_CURLY_B EnumValue EnumValues R_CURLY_B

    IDENTIFIER  shift, and go to state 50


State 19

   22 StructDefinition: STRUCT • IDENTIFIER L_CURLY_B Vars R_CURLY_B

    IDENTIFIER  shift, and go to state 51


State 20

   64 FunctionDefinition: FUNCTION • IDENTIFIER ParameterList FunctionAttribute RETURNS ReturnList Block
   65                   | FUNCTION • IDENTIFIER ParameterList FunctionAttribute Block
   67                   | FUNCTION • L_PAREN R_PAREN FunctionAttribute Block
   94 FunctionTypeName: FUNCTION • ParameterList RETURNS ParameterList

    L_PAREN     shift, and go to state 52
    IDENTIFIER  shift, and go to state 53

    ParameterList  go to state 54


State 21

   28 ModifierDefinition: MODIFIER • IDENTIFIER ParameterList Block
   29                   | MODIFIER • IDENTIFIER Block

    IDENTIFIER  shift, and go to state 55


State 22

   89 TypeName: ADDRESS • PAYABLE
  203 ElementaryTypeName: ADDRESS •

    PAYABLE  shift, and go to state 56

    PAYABLE   [reduce using rule 203 (ElementaryTypeName)]
    $default  reduce using rule 203 (ElementaryTypeName)


State 23

  204 ElementaryTypeName: BOOL •

    $default  reduce using rule 204 (ElementaryTypeName)


State 24

  208 ElementaryTypeName: BYTE •

    $default  reduce using rule 208 (ElementaryTypeName)


State 25

   91 Mapping: MAPPING • L_PAREN ElementaryTypeName IMPLIES TypeName R_PAREN

    L_PAREN  shift, and go to state 57


State 26

   90 UserDefinedTypeName: IDENTIFIER •

    $default  reduce using rule 90 (UserDefinedTypeName)


State 27

  207 ElementaryTypeName: UINT •

    $default  reduce using rule 207 (ElementaryTypeName)


State 28

   33 EventDefinition: EVENT • IDENTIFIER EventParameterList ANONYMOUS SEMICOLON
   34                | EVENT • IDENTIFIER EventParameterList SEMICOLON

    IDENTIFIER  shift, and go to state 58


State 29

   20 UsingForDeclaration: USING • IDENTIFIER FOR STAR SEMICOLON
   21                    | USING • IDENTIFIER FOR TypeName SEMICOLON

    IDENTIFIER  shift, and go to state 59


State 30

   66 FunctionDefinition: CONSTRUCTOR • ParameterList FunctionAttribute Block

    L_PAREN  shift, and go to state 60

    ParameterList  go to state 61


State 31

  209 ElementaryTypeName: AUTO •

    $default  reduce using rule 209 (ElementaryTypeName)


State 32

  205 ElementaryTypeName: STRING •

    $default  reduce using rule 205 (ElementaryTypeName)


State 33

  206 ElementaryTypeName: INT •

    $default  reduce using rule 206 (ElementaryTypeName)


State 34

    7 ContractDefinition: CONTRACT IDENTIFIER L_CURLY_B $@2 ContractPart • R_CURLY_B

    R_CURLY_B  shift, and go to state 62


State 35

   14 ContractPart: UsingForDeclaration • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 63
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 36

   15 ContractPart: StructDefinition • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 64
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 37

   16 ContractPart: ModifierDefinition • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 65
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 38

   17 ContractPart: EventDefinition • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 66
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 39

   18 ContractPart: EnumDefinition • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 67
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 40

   12 ContractPart: StateVariableDeclaration • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 68
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 41

   13 ContractPart: FunctionDefinition • ContractPart

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 69
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 42

   47 StateVariableDeclaration: TypeName • VariableAttribute IDENTIFIER SEMICOLON
   48                         | TypeName • VariableAttribute IDENTIFIER EQUAL Expression SEMICOLON
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    PUBLIC    shift, and go to state 70
    PRIVATE   shift, and go to state 71
    INTERNAL  shift, and go to state 72
    CONSTANT  shift, and go to state 73
    OPT_L     shift, and go to state 74
    PURE      shift, and go to state 75
    VIEW      shift, and go to state 76
    PAYABLE   shift, and go to state 77
    EXTERNAL  shift, and go to state 78

    $default  reduce using rule 59 (VariableAttribute)

    StateMutability    go to state 79
    Qualifier          go to state 80
    VariableAttribute  go to state 81


State 43

   86 TypeName: UserDefinedTypeName •

    $default  reduce using rule 86 (TypeName)


State 44

   85 TypeName: Mapping •

    $default  reduce using rule 85 (TypeName)


State 45

   87 TypeName: ArrayTypeName •

    $default  reduce using rule 87 (TypeName)


State 46

   88 TypeName: FunctionTypeName •

    $default  reduce using rule 88 (TypeName)


State 47

   84 TypeName: ElementaryTypeName •

    $default  reduce using rule 84 (TypeName)


State 48

   11 BaseClass: IDENTIFIER COMMA • BaseClass

    IDENTIFIER  shift, and go to state 16

    BaseClass  go to state 82


State 49

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass L_CURLY_B • $@3 ContractPart R_CURLY_B

    $default  reduce using rule 8 ($@3)

    $@3  go to state 83


State 50

   43 EnumDefinition: ENUM IDENTIFIER • L_CURLY_B R_CURLY_B
   44               | ENUM IDENTIFIER • L_CURLY_B EnumValue EnumValues R_CURLY_B

    L_CURLY_B  shift, and go to state 84


State 51

   22 StructDefinition: STRUCT IDENTIFIER • L_CURLY_B Vars R_CURLY_B

    L_CURLY_B  shift, and go to state 85


State 52

   67 FunctionDefinition: FUNCTION L_PAREN • R_PAREN FunctionAttribute Block
   68 ParameterList: L_PAREN • Parameter R_PAREN

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    R_PAREN     shift, and go to state 87
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    R_PAREN  [reduce using rule 74 (Parameter)]

    Parameter            go to state 88
    TypeName             go to state 89
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 53

   64 FunctionDefinition: FUNCTION IDENTIFIER • ParameterList FunctionAttribute RETURNS ReturnList Block
   65                   | FUNCTION IDENTIFIER • ParameterList FunctionAttribute Block

    L_PAREN  shift, and go to state 60

    ParameterList  go to state 90


State 54

   94 FunctionTypeName: FUNCTION ParameterList • RETURNS ParameterList

    RETURNS  shift, and go to state 91


State 55

   28 ModifierDefinition: MODIFIER IDENTIFIER • ParameterList Block
   29                   | MODIFIER IDENTIFIER • Block

    L_CURLY_B  shift, and go to state 92
    L_PAREN    shift, and go to state 60
    SEMICOLON  shift, and go to state 93

    ParameterList  go to state 94
    Block          go to state 95


State 56

   89 TypeName: ADDRESS PAYABLE •

    $default  reduce using rule 89 (TypeName)


State 57

   91 Mapping: MAPPING L_PAREN • ElementaryTypeName IMPLIES TypeName R_PAREN

    ADDRESS  shift, and go to state 96
    BOOL     shift, and go to state 23
    BYTE     shift, and go to state 24
    UINT     shift, and go to state 27
    AUTO     shift, and go to state 31
    STRING   shift, and go to state 32
    INT      shift, and go to state 33

    ElementaryTypeName  go to state 97


State 58

   33 EventDefinition: EVENT IDENTIFIER • EventParameterList ANONYMOUS SEMICOLON
   34                | EVENT IDENTIFIER • EventParameterList SEMICOLON

    L_PAREN  shift, and go to state 98

    EventParameterList  go to state 99


State 59

   20 UsingForDeclaration: USING IDENTIFIER • FOR STAR SEMICOLON
   21                    | USING IDENTIFIER • FOR TypeName SEMICOLON

    FOR  shift, and go to state 100


State 60

   68 ParameterList: L_PAREN • Parameter R_PAREN

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    $default  reduce using rule 74 (Parameter)

    Parameter            go to state 88
    TypeName             go to state 89
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 61

   66 FunctionDefinition: CONSTRUCTOR ParameterList • FunctionAttribute Block

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 105


State 62

    7 ContractDefinition: CONTRACT IDENTIFIER L_CURLY_B $@2 ContractPart R_CURLY_B •

    $default  reduce using rule 7 (ContractDefinition)


State 63

   14 ContractPart: UsingForDeclaration ContractPart •

    $default  reduce using rule 14 (ContractPart)


State 64

   15 ContractPart: StructDefinition ContractPart •

    $default  reduce using rule 15 (ContractPart)


State 65

   16 ContractPart: ModifierDefinition ContractPart •

    $default  reduce using rule 16 (ContractPart)


State 66

   17 ContractPart: EventDefinition ContractPart •

    $default  reduce using rule 17 (ContractPart)


State 67

   18 ContractPart: EnumDefinition ContractPart •

    $default  reduce using rule 18 (ContractPart)


State 68

   12 ContractPart: StateVariableDeclaration ContractPart •

    $default  reduce using rule 12 (ContractPart)


State 69

   13 ContractPart: FunctionDefinition ContractPart •

    $default  reduce using rule 13 (ContractPart)


State 70

   52 Qualifier: PUBLIC •

    $default  reduce using rule 52 (Qualifier)


State 71

   53 Qualifier: PRIVATE •

    $default  reduce using rule 53 (Qualifier)


State 72

   55 Qualifier: INTERNAL •

    $default  reduce using rule 55 (Qualifier)


State 73

   54 Qualifier: CONSTANT •

    $default  reduce using rule 54 (Qualifier)


State 74

   92 ArrayTypeName: TypeName OPT_L • OPT_R
   93              | TypeName OPT_L • Expression OPT_R

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    OPT_R           shift, and go to state 107
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 123
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 75

   49 StateMutability: PURE •

    $default  reduce using rule 49 (StateMutability)


State 76

   50 StateMutability: VIEW •

    $default  reduce using rule 50 (StateMutability)


State 77

   51 StateMutability: PAYABLE •

    $default  reduce using rule 51 (StateMutability)


State 78

   56 Qualifier: EXTERNAL •

    $default  reduce using rule 56 (Qualifier)


State 79

   58 VariableAttribute: StateMutability • VariableAttribute

    PUBLIC    shift, and go to state 70
    PRIVATE   shift, and go to state 71
    INTERNAL  shift, and go to state 72
    CONSTANT  shift, and go to state 73
    PURE      shift, and go to state 75
    VIEW      shift, and go to state 76
    PAYABLE   shift, and go to state 77
    EXTERNAL  shift, and go to state 78

    $default  reduce using rule 59 (VariableAttribute)

    StateMutability    go to state 79
    Qualifier          go to state 80
    VariableAttribute  go to state 133


State 80

   57 VariableAttribute: Qualifier • VariableAttribute

    PUBLIC    shift, and go to state 70
    PRIVATE   shift, and go to state 71
    INTERNAL  shift, and go to state 72
    CONSTANT  shift, and go to state 73
    PURE      shift, and go to state 75
    VIEW      shift, and go to state 76
    PAYABLE   shift, and go to state 77
    EXTERNAL  shift, and go to state 78

    $default  reduce using rule 59 (VariableAttribute)

    StateMutability    go to state 79
    Qualifier          go to state 80
    VariableAttribute  go to state 134


State 81

   47 StateVariableDeclaration: TypeName VariableAttribute • IDENTIFIER SEMICOLON
   48                         | TypeName VariableAttribute • IDENTIFIER EQUAL Expression SEMICOLON

    IDENTIFIER  shift, and go to state 135


State 82

   11 BaseClass: IDENTIFIER COMMA BaseClass •

    $default  reduce using rule 11 (BaseClass)


State 83

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass L_CURLY_B $@3 • ContractPart R_CURLY_B

    ENUM         shift, and go to state 18
    STRUCT       shift, and go to state 19
    FUNCTION     shift, and go to state 20
    MODIFIER     shift, and go to state 21
    ADDRESS      shift, and go to state 22
    BOOL         shift, and go to state 23
    BYTE         shift, and go to state 24
    MAPPING      shift, and go to state 25
    IDENTIFIER   shift, and go to state 26
    UINT         shift, and go to state 27
    EVENT        shift, and go to state 28
    USING        shift, and go to state 29
    CONSTRUCTOR  shift, and go to state 30
    AUTO         shift, and go to state 31
    STRING       shift, and go to state 32
    INT          shift, and go to state 33

    $default  reduce using rule 19 (ContractPart)

    ContractPart              go to state 136
    UsingForDeclaration       go to state 35
    StructDefinition          go to state 36
    ModifierDefinition        go to state 37
    EventDefinition           go to state 38
    EnumDefinition            go to state 39
    StateVariableDeclaration  go to state 40
    FunctionDefinition        go to state 41
    TypeName                  go to state 42
    UserDefinedTypeName       go to state 43
    Mapping                   go to state 44
    ArrayTypeName             go to state 45
    FunctionTypeName          go to state 46
    ElementaryTypeName        go to state 47


State 84

   43 EnumDefinition: ENUM IDENTIFIER L_CURLY_B • R_CURLY_B
   44               | ENUM IDENTIFIER L_CURLY_B • EnumValue EnumValues R_CURLY_B

    R_CURLY_B   shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    EnumValue  go to state 139


State 85

   22 StructDefinition: STRUCT IDENTIFIER L_CURLY_B • Vars R_CURLY_B

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    Vars                 go to state 140
    VariableDeclaration  go to state 141
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 86

   94 FunctionTypeName: FUNCTION • ParameterList RETURNS ParameterList

    L_PAREN  shift, and go to state 60

    ParameterList  go to state 54


State 87

   67 FunctionDefinition: FUNCTION L_PAREN R_PAREN • FunctionAttribute Block

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 143


State 88

   68 ParameterList: L_PAREN Parameter • R_PAREN

    R_PAREN  shift, and go to state 144


State 89

   70 Parameter: TypeName • IDENTIFIER COMMA $@4 Parameter
   71          | TypeName • StorageLocation IDENTIFIER
   72          | TypeName • IDENTIFIER
   73          | TypeName •
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    MEMORY      shift, and go to state 145
    STORAGE     shift, and go to state 146
    CALLDATA    shift, and go to state 147
    OPT_L       shift, and go to state 74
    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 73 (Parameter)

    StorageLocation  go to state 149


State 90

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList • FunctionAttribute RETURNS ReturnList Block
   65                   | FUNCTION IDENTIFIER ParameterList • FunctionAttribute Block

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 150


State 91

   94 FunctionTypeName: FUNCTION ParameterList RETURNS • ParameterList

    L_PAREN  shift, and go to state 60

    ParameterList  go to state 151


State 92

   95 Block: L_CURLY_B • Statement R_CURLY_B

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 153


State 93

   96 Block: SEMICOLON •

    $default  reduce using rule 96 (Block)


State 94

   28 ModifierDefinition: MODIFIER IDENTIFIER ParameterList • Block

    L_CURLY_B  shift, and go to state 92
    SEMICOLON  shift, and go to state 93

    Block  go to state 154


State 95

   29 ModifierDefinition: MODIFIER IDENTIFIER Block •

    $default  reduce using rule 29 (ModifierDefinition)


State 96

  203 ElementaryTypeName: ADDRESS •

    $default  reduce using rule 203 (ElementaryTypeName)


State 97

   91 Mapping: MAPPING L_PAREN ElementaryTypeName • IMPLIES TypeName R_PAREN

    IMPLIES  shift, and go to state 155


State 98

   35 EventParameterList: L_PAREN • EventParameter R_PAREN
   36                   | L_PAREN • R_PAREN

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    R_PAREN     shift, and go to state 156
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    EventParameter       go to state 157
    TypeName             go to state 158
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 99

   33 EventDefinition: EVENT IDENTIFIER EventParameterList • ANONYMOUS SEMICOLON
   34                | EVENT IDENTIFIER EventParameterList • SEMICOLON

    ANONYMOUS  shift, and go to state 159
    SEMICOLON  shift, and go to state 160


State 100

   20 UsingForDeclaration: USING IDENTIFIER FOR • STAR SEMICOLON
   21                    | USING IDENTIFIER FOR • TypeName SEMICOLON

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    STAR        shift, and go to state 161
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    TypeName             go to state 162
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 101

   30 ModifierInvocation: IDENTIFIER •
   31                   | IDENTIFIER • L_PAREN ExpressionList R_PAREN
   32                   | IDENTIFIER • L_PAREN R_PAREN

    L_PAREN  shift, and go to state 163

    $default  reduce using rule 30 (ModifierInvocation)


State 102

   62 FunctionAttribute: ModifierInvocation • FunctionAttribute

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 164


State 103

   61 FunctionAttribute: StateMutability • FunctionAttribute

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 165


State 104

   60 FunctionAttribute: Qualifier • FunctionAttribute

    PUBLIC      shift, and go to state 70
    PRIVATE     shift, and go to state 71
    INTERNAL    shift, and go to state 72
    CONSTANT    shift, and go to state 73
    PURE        shift, and go to state 75
    VIEW        shift, and go to state 76
    PAYABLE     shift, and go to state 77
    IDENTIFIER  shift, and go to state 101
    EXTERNAL    shift, and go to state 78

    $default  reduce using rule 63 (FunctionAttribute)

    ModifierInvocation  go to state 102
    StateMutability     go to state 103
    Qualifier           go to state 104
    FunctionAttribute   go to state 166


State 105

   66 FunctionDefinition: CONSTRUCTOR ParameterList FunctionAttribute • Block

    L_CURLY_B  shift, and go to state 92
    SEMICOLON  shift, and go to state 93

    Block  go to state 167


State 106

  137 Expression: OPT_L • ExpressionList OPT_R

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 168
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    ExpressionList      go to state 169
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 107

   92 ArrayTypeName: TypeName OPT_L OPT_R •

    $default  reduce using rule 92 (ArrayTypeName)


State 108

  189 NumberLiteral: HEX_NUMBER •
  191              | HEX_NUMBER • NumberUnit

    FINNEY   shift, and go to state 170
    ETHER    shift, and go to state 171
    SECONDS  shift, and go to state 172
    MINUTES  shift, and go to state 173
    HOURS    shift, and go to state 174
    DAYS     shift, and go to state 175
    WEEKS    shift, and go to state 176
    YEARS    shift, and go to state 177
    WEI      shift, and go to state 178
    SZABO    shift, and go to state 179

    $default  reduce using rule 189 (NumberLiteral)

    NumberUnit  go to state 180


State 109

  164 PrimaryExpression: STRING_LITERAL •

    $default  reduce using rule 164 (PrimaryExpression)


State 110

  156 Unary2: PLUS •

    $default  reduce using rule 156 (Unary2)


State 111

  155 Unary2: PLUS2 •

    $default  reduce using rule 155 (Unary2)


State 112

  160 Unary2: MINUS2 •

    $default  reduce using rule 160 (Unary2)


State 113

  138 Expression: L_PAREN • Expression R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 181
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 114

  165 PrimaryExpression: IDENTIFIER •
  179 MemberAccess: IDENTIFIER • DOT IDENTIFIER
  180             | IDENTIFIER • DOT IndexAccess
  182 IndexAccess: IDENTIFIER • OPT_L Expression OPT_R IndexAccess2
  183            | IDENTIFIER • OPT_L OPT_R

    DOT    shift, and go to state 182
    OPT_L  shift, and go to state 183

    DOT       [reduce using rule 165 (PrimaryExpression)]
    $default  reduce using rule 165 (PrimaryExpression)


State 115

  190 NumberLiteral: DECIMAL_NUMBER •
  192              | DECIMAL_NUMBER • NumberUnit

    FINNEY   shift, and go to state 170
    ETHER    shift, and go to state 171
    SECONDS  shift, and go to state 172
    MINUTES  shift, and go to state 173
    HOURS    shift, and go to state 174
    DAYS     shift, and go to state 175
    WEEKS    shift, and go to state 176
    YEARS    shift, and go to state 177
    WEI      shift, and go to state 178
    SZABO    shift, and go to state 179

    $default  reduce using rule 190 (NumberLiteral)

    NumberUnit  go to state 184


State 116

  161 Unary2: NOT •

    $default  reduce using rule 161 (Unary2)


State 117

  187 BooleanLiteral: TRUE •

    $default  reduce using rule 187 (BooleanLiteral)


State 118

  188 BooleanLiteral: FALSE •

    $default  reduce using rule 188 (BooleanLiteral)


State 119

  159 Unary2: DELETE •

    $default  reduce using rule 159 (Unary2)


State 120

  177 NewExpression: NEW • TypeName

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    TypeName             go to state 185
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 121

  157 Unary2: MINUS •

    $default  reduce using rule 157 (Unary2)


State 122

  158 Unary2: TILDE •

    $default  reduce using rule 158 (Unary2)


State 123

   93 ArrayTypeName: TypeName OPT_L Expression • OPT_R
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    OPT_R      shift, and go to state 187
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 124

  139 Expression: Unary2 • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 204
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 125

  144 Expression: PrimaryExpression •

    $default  reduce using rule 144 (Expression)


State 126

  135 Expression: FunctionCall •

    $default  reduce using rule 135 (Expression)


State 127

  133 Expression: NewExpression •

    $default  reduce using rule 133 (Expression)


State 128

  136 Expression: MemberAccess •

    $default  reduce using rule 136 (Expression)


State 129

  134 Expression: IndexAccess •

    $default  reduce using rule 134 (Expression)


State 130

  162 PrimaryExpression: BooleanLiteral •

    $default  reduce using rule 162 (PrimaryExpression)


State 131

  163 PrimaryExpression: NumberLiteral •

    $default  reduce using rule 163 (PrimaryExpression)


State 132

  166 PrimaryExpression: ElementaryTypeName •

    $default  reduce using rule 166 (PrimaryExpression)


State 133

   58 VariableAttribute: StateMutability VariableAttribute •

    $default  reduce using rule 58 (VariableAttribute)


State 134

   57 VariableAttribute: Qualifier VariableAttribute •

    $default  reduce using rule 57 (VariableAttribute)


State 135

   47 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER • SEMICOLON
   48                         | TypeName VariableAttribute IDENTIFIER • EQUAL Expression SEMICOLON

    EQUAL      shift, and go to state 205
    SEMICOLON  shift, and go to state 206


State 136

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass L_CURLY_B $@3 ContractPart • R_CURLY_B

    R_CURLY_B  shift, and go to state 207


State 137

   43 EnumDefinition: ENUM IDENTIFIER L_CURLY_B R_CURLY_B •

    $default  reduce using rule 43 (EnumDefinition)


State 138

   42 EnumValue: IDENTIFIER •

    $default  reduce using rule 42 (EnumValue)


State 139

   44 EnumDefinition: ENUM IDENTIFIER L_CURLY_B EnumValue • EnumValues R_CURLY_B

    COMMA  shift, and go to state 208

    $default  reduce using rule 46 (EnumValues)

    EnumValues  go to state 209


State 140

   22 StructDefinition: STRUCT IDENTIFIER L_CURLY_B Vars • R_CURLY_B

    R_CURLY_B  shift, and go to state 210


State 141

   23 Vars: VariableDeclaration • SEMICOLON Vars
   24     | VariableDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 211


State 142

   80 VariableDeclaration: TypeName • StorageLocation IDENTIFIER EQUAL Expression
   81                    | TypeName • StorageLocation IDENTIFIER
   82                    | TypeName • IDENTIFIER
   83                    | TypeName • IDENTIFIER EQUAL Expression
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    MEMORY      shift, and go to state 145
    STORAGE     shift, and go to state 146
    CALLDATA    shift, and go to state 147
    OPT_L       shift, and go to state 74
    IDENTIFIER  shift, and go to state 212

    StorageLocation  go to state 213


State 143

   67 FunctionDefinition: FUNCTION L_PAREN R_PAREN FunctionAttribute • Block

    L_CURLY_B  shift, and go to state 92
    SEMICOLON  shift, and go to state 93

    Block  go to state 214


State 144

   68 ParameterList: L_PAREN Parameter R_PAREN •

    $default  reduce using rule 68 (ParameterList)


State 145

   25 StorageLocation: MEMORY •

    $default  reduce using rule 25 (StorageLocation)


State 146

   26 StorageLocation: STORAGE •

    $default  reduce using rule 26 (StorageLocation)


State 147

   27 StorageLocation: CALLDATA •

    $default  reduce using rule 27 (StorageLocation)


State 148

   70 Parameter: TypeName IDENTIFIER • COMMA $@4 Parameter
   72          | TypeName IDENTIFIER •

    COMMA  shift, and go to state 215

    $default  reduce using rule 72 (Parameter)


State 149

   71 Parameter: TypeName StorageLocation • IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 150

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute • RETURNS ReturnList Block
   65                   | FUNCTION IDENTIFIER ParameterList FunctionAttribute • Block

    L_CURLY_B  shift, and go to state 92
    RETURNS    shift, and go to state 217
    SEMICOLON  shift, and go to state 93

    Block  go to state 218


State 151

   94 FunctionTypeName: FUNCTION ParameterList RETURNS ParameterList •

    $default  reduce using rule 94 (FunctionTypeName)


State 152

  100 Statement: L_CURLY_B • Statement R_CURLY_B

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 219


State 153

   95 Block: L_CURLY_B Statement • R_CURLY_B
   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    R_CURLY_B       shift, and go to state 227
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 154

   28 ModifierDefinition: MODIFIER IDENTIFIER ParameterList Block •

    $default  reduce using rule 28 (ModifierDefinition)


State 155

   91 Mapping: MAPPING L_PAREN ElementaryTypeName IMPLIES • TypeName R_PAREN

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    TypeName             go to state 246
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 156

   36 EventParameterList: L_PAREN R_PAREN •

    $default  reduce using rule 36 (EventParameterList)


State 157

   35 EventParameterList: L_PAREN EventParameter • R_PAREN

    R_PAREN  shift, and go to state 247


State 158

   37 EventParameter: TypeName • INDEXED IDENTIFIER COMMA EventParameter
   38               | TypeName • INDEXED IDENTIFIER
   39               | TypeName • IDENTIFIER COMMA EventParameter
   40               | TypeName • IDENTIFIER
   41               | TypeName •
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    OPT_L       shift, and go to state 74
    IDENTIFIER  shift, and go to state 248
    INDEXED     shift, and go to state 249

    $default  reduce using rule 41 (EventParameter)


State 159

   33 EventDefinition: EVENT IDENTIFIER EventParameterList ANONYMOUS • SEMICOLON

    SEMICOLON  shift, and go to state 250


State 160

   34 EventDefinition: EVENT IDENTIFIER EventParameterList SEMICOLON •

    $default  reduce using rule 34 (EventDefinition)


State 161

   20 UsingForDeclaration: USING IDENTIFIER FOR STAR • SEMICOLON

    SEMICOLON  shift, and go to state 251


State 162

   21 UsingForDeclaration: USING IDENTIFIER FOR TypeName • SEMICOLON
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    OPT_L      shift, and go to state 74
    SEMICOLON  shift, and go to state 252


State 163

   31 ModifierInvocation: IDENTIFIER L_PAREN • ExpressionList R_PAREN
   32                   | IDENTIFIER L_PAREN • R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    R_PAREN         shift, and go to state 253
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 168
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    ExpressionList      go to state 254
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 164

   62 FunctionAttribute: ModifierInvocation FunctionAttribute •

    $default  reduce using rule 62 (FunctionAttribute)


State 165

   61 FunctionAttribute: StateMutability FunctionAttribute •

    $default  reduce using rule 61 (FunctionAttribute)


State 166

   60 FunctionAttribute: Qualifier FunctionAttribute •

    $default  reduce using rule 60 (FunctionAttribute)


State 167

   66 FunctionDefinition: CONSTRUCTOR ParameterList FunctionAttribute Block •

    $default  reduce using rule 66 (FunctionDefinition)


State 168

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  167 ExpressionList: Expression •
  168               | Expression • COMMA ExpressionList
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    COMMA      shift, and go to state 255
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 167 (ExpressionList)

    Operator  go to state 202
    Unary1    go to state 203


State 169

  137 Expression: OPT_L ExpressionList • OPT_R

    OPT_R  shift, and go to state 256


State 170

  195 NumberUnit: FINNEY •

    $default  reduce using rule 195 (NumberUnit)


State 171

  196 NumberUnit: ETHER •

    $default  reduce using rule 196 (NumberUnit)


State 172

  197 NumberUnit: SECONDS •

    $default  reduce using rule 197 (NumberUnit)


State 173

  198 NumberUnit: MINUTES •

    $default  reduce using rule 198 (NumberUnit)


State 174

  199 NumberUnit: HOURS •

    $default  reduce using rule 199 (NumberUnit)


State 175

  200 NumberUnit: DAYS •

    $default  reduce using rule 200 (NumberUnit)


State 176

  201 NumberUnit: WEEKS •

    $default  reduce using rule 201 (NumberUnit)


State 177

  202 NumberUnit: YEARS •

    $default  reduce using rule 202 (NumberUnit)


State 178

  193 NumberUnit: WEI •

    $default  reduce using rule 193 (NumberUnit)


State 179

  194 NumberUnit: SZABO •

    $default  reduce using rule 194 (NumberUnit)


State 180

  191 NumberLiteral: HEX_NUMBER NumberUnit •

    $default  reduce using rule 191 (NumberLiteral)


State 181

  132 Expression: Expression • Unary1
  138           | L_PAREN Expression • R_PAREN
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 257
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 182

  179 MemberAccess: IDENTIFIER DOT • IDENTIFIER
  180             | IDENTIFIER DOT • IndexAccess

    IDENTIFIER  shift, and go to state 258

    IndexAccess  go to state 259


State 183

  182 IndexAccess: IDENTIFIER OPT_L • Expression OPT_R IndexAccess2
  183            | IDENTIFIER OPT_L • OPT_R

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    OPT_R           shift, and go to state 260
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 261
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 184

  192 NumberLiteral: DECIMAL_NUMBER NumberUnit •

    $default  reduce using rule 192 (NumberLiteral)


State 185

   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R
  177 NewExpression: NEW TypeName •

    OPT_L  shift, and go to state 74

    $default  reduce using rule 177 (NewExpression)


State 186

  178 MemberAccess: Expression DOT • IDENTIFIER
  181             | Expression DOT • IndexAccess

    IDENTIFIER  shift, and go to state 262

    IndexAccess  go to state 263


State 187

   93 ArrayTypeName: TypeName OPT_L Expression OPT_R •

    $default  reduce using rule 93 (ArrayTypeName)


State 188

  146 Operator: PLUS •

    $default  reduce using rule 146 (Operator)


State 189

  145 Operator: EQUAL •

    $default  reduce using rule 145 (Operator)


State 190

  151 Operator: EQUAL2 •

    $default  reduce using rule 151 (Operator)


State 191

  153 Unary1: PLUS2 •

    $default  reduce using rule 153 (Unary1)


State 192

  154 Unary1: MINUS2 •

    $default  reduce using rule 154 (Unary1)


State 193

  175 FunctionCall: Expression L_PAREN • FunctionCallArguments R_PAREN
  176             | Expression L_PAREN • R_PAREN

    L_CURLY_B       shift, and go to state 264
    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    R_PAREN         shift, and go to state 265
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression             go to state 168
    Unary2                 go to state 124
    PrimaryExpression      go to state 125
    ExpressionList         go to state 266
    FunctionCallArguments  go to state 267
    FunctionCall           go to state 126
    NewExpression          go to state 127
    MemberAccess           go to state 128
    IndexAccess            go to state 129
    BooleanLiteral         go to state 130
    NumberLiteral          go to state 131
    ElementaryTypeName     go to state 132


State 194

  152 Operator: CARET •

    $default  reduce using rule 152 (Operator)


State 195

  150 Operator: MOD •

    $default  reduce using rule 150 (Operator)


State 196

  143 Expression: Expression REL_OP • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 268
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 197

  140 Expression: Expression LOG_OP • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 269
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 198

  141 Expression: Expression QUES_MARK • Expression COLON Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 270
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 199

  149 Operator: STAR •

    $default  reduce using rule 149 (Operator)


State 200

  147 Operator: MINUS •

    $default  reduce using rule 147 (Operator)


State 201

  148 Operator: DIVIDE •

    $default  reduce using rule 148 (Operator)


State 202

  142 Expression: Expression Operator • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 271
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 203

  132 Expression: Expression Unary1 •

    $default  reduce using rule 132 (Expression)


State 204

  132 Expression: Expression • Unary1
  139           | Unary2 Expression •
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    DOT        [reduce using rule 139 (Expression)]
    PLUS       [reduce using rule 139 (Expression)]
    EQUAL      [reduce using rule 139 (Expression)]
    EQUAL2     [reduce using rule 139 (Expression)]
    PLUS2      [reduce using rule 139 (Expression)]
    MINUS2     [reduce using rule 139 (Expression)]
    L_PAREN    [reduce using rule 139 (Expression)]
    CARET      [reduce using rule 139 (Expression)]
    MOD        [reduce using rule 139 (Expression)]
    REL_OP     [reduce using rule 139 (Expression)]
    LOG_OP     [reduce using rule 139 (Expression)]
    QUES_MARK  [reduce using rule 139 (Expression)]
    STAR       [reduce using rule 139 (Expression)]
    MINUS      [reduce using rule 139 (Expression)]
    DIVIDE     [reduce using rule 139 (Expression)]
    $default   reduce using rule 139 (Expression)

    Operator  go to state 202
    Unary1    go to state 203


State 205

   48 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER EQUAL • Expression SEMICOLON

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 272
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 206

   47 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER SEMICOLON •

    $default  reduce using rule 47 (StateVariableDeclaration)


State 207

    9 ContractDefinition: CONTRACT IDENTIFIER IS BaseClass L_CURLY_B $@3 ContractPart R_CURLY_B •

    $default  reduce using rule 9 (ContractDefinition)


State 208

   45 EnumValues: COMMA • EnumValue EnumValues

    IDENTIFIER  shift, and go to state 138

    EnumValue  go to state 273


State 209

   44 EnumDefinition: ENUM IDENTIFIER L_CURLY_B EnumValue EnumValues • R_CURLY_B

    R_CURLY_B  shift, and go to state 274


State 210

   22 StructDefinition: STRUCT IDENTIFIER L_CURLY_B Vars R_CURLY_B •

    $default  reduce using rule 22 (StructDefinition)


State 211

   23 Vars: VariableDeclaration SEMICOLON • Vars
   24     | VariableDeclaration SEMICOLON •

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    $default  reduce using rule 24 (Vars)

    Vars                 go to state 275
    VariableDeclaration  go to state 141
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 212

   82 VariableDeclaration: TypeName IDENTIFIER •
   83                    | TypeName IDENTIFIER • EQUAL Expression

    EQUAL  shift, and go to state 276

    $default  reduce using rule 82 (VariableDeclaration)


State 213

   80 VariableDeclaration: TypeName StorageLocation • IDENTIFIER EQUAL Expression
   81                    | TypeName StorageLocation • IDENTIFIER

    IDENTIFIER  shift, and go to state 277


State 214

   67 FunctionDefinition: FUNCTION L_PAREN R_PAREN FunctionAttribute Block •

    $default  reduce using rule 67 (FunctionDefinition)


State 215

   70 Parameter: TypeName IDENTIFIER COMMA • $@4 Parameter

    $default  reduce using rule 69 ($@4)

    $@4  go to state 278


State 216

   71 Parameter: TypeName StorageLocation IDENTIFIER •

    $default  reduce using rule 71 (Parameter)


State 217

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute RETURNS • ReturnList Block

    L_PAREN  shift, and go to state 279

    ReturnList  go to state 280


State 218

   65 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute Block •

    $default  reduce using rule 65 (FunctionDefinition)


State 219

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  100          | L_CURLY_B Statement • R_CURLY_B
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    R_CURLY_B       shift, and go to state 281
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 220

  121 WhileStatement: WHILE • L_PAREN Expression R_PAREN Statement

    L_PAREN  shift, and go to state 282


State 221

  125 DoWhileStatement: DO • Statement WHILE L_PAREN Expression R_PAREN

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 283


State 222

  124 ForStatement: FOR • L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN Statement

    L_PAREN  shift, and go to state 284


State 223

  119 IfStatement: IF • L_PAREN Expression R_PAREN Statement
  120            | IF • L_PAREN Expression R_PAREN Statement ELSE Statement

    L_PAREN  shift, and go to state 285


State 224

  103 Statement: Statement CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 286


State 225

  104 Statement: Statement BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 287


State 226

  105 Statement: Statement RETURN • L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement RETURN • Expression SEMICOLON
  107          | Statement RETURN • SEMICOLON

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 288
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122
    SEMICOLON       shift, and go to state 289

    Expression          go to state 290
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 227

   95 Block: L_CURLY_B Statement R_CURLY_B •

    $default  reduce using rule 95 (Block)


State 228

  128 VariableDefinition: L_PAREN • VariableDeclaration VarDec2 R_PAREN EQUAL Expression
  129                   | L_PAREN • VarDec2 R_PAREN
  138 Expression: L_PAREN • Expression R_PAREN

    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    COMMA           shift, and go to state 291
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    $default  reduce using rule 131 (VarDec2)

    VariableDeclaration  go to state 292
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    VarDec2              go to state 293
    Expression           go to state 181
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 229

   90 UserDefinedTypeName: IDENTIFIER •
  165 PrimaryExpression: IDENTIFIER •
  179 MemberAccess: IDENTIFIER • DOT IDENTIFIER
  180             | IDENTIFIER • DOT IndexAccess
  182 IndexAccess: IDENTIFIER • OPT_L Expression OPT_R IndexAccess2
  183            | IDENTIFIER • OPT_L OPT_R

    DOT    shift, and go to state 182
    OPT_L  shift, and go to state 183

    MEMORY      reduce using rule 90 (UserDefinedTypeName)
    STORAGE     reduce using rule 90 (UserDefinedTypeName)
    CALLDATA    reduce using rule 90 (UserDefinedTypeName)
    DOT         [reduce using rule 165 (PrimaryExpression)]
    OPT_L       [reduce using rule 90 (UserDefinedTypeName)]
    IDENTIFIER  reduce using rule 90 (UserDefinedTypeName)
    $default    reduce using rule 165 (PrimaryExpression)


State 230

  126 EmitStatement: EMIT • FunctionCall

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 294
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 295
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 231

  110 Statement: Statement UNDERSCORE •
  111          | Statement UNDERSCORE • SEMICOLON

    SEMICOLON  shift, and go to state 296

    $default  reduce using rule 110 (Statement)


State 232

  114 AssertStatement: REQUIRE • L_PAREN Expression R_PAREN
  116                | REQUIRE • L_PAREN Expression COMMA STRING_LITERAL R_PAREN

    L_PAREN  shift, and go to state 297


State 233

  115 AssertStatement: ASSERT • L_PAREN Expression R_PAREN
  117                | ASSERT • L_PAREN Expression COMMA STRING_LITERAL R_PAREN

    L_PAREN  shift, and go to state 298


State 234

  108 Statement: Statement THROW • SEMICOLON

    SEMICOLON  shift, and go to state 299


State 235

  127 VariableDefinition: VariableDeclaration •

    $default  reduce using rule 127 (VariableDefinition)


State 236

  112 Statement: Statement AssertStatement • SEMICOLON

    SEMICOLON  shift, and go to state 300


State 237

   97 Statement: Statement IfStatement •

    $default  reduce using rule 97 (Statement)


State 238

   98 Statement: Statement WhileStatement •

    $default  reduce using rule 98 (Statement)


State 239

  101 Statement: Statement SimpleStatement • SEMICOLON

    SEMICOLON  shift, and go to state 301


State 240

   99 Statement: Statement ForStatement •

    $default  reduce using rule 99 (Statement)


State 241

  102 Statement: Statement DoWhileStatement • SEMICOLON

    SEMICOLON  shift, and go to state 302


State 242

  109 Statement: Statement EmitStatement • SEMICOLON

    SEMICOLON  shift, and go to state 303


State 243

  123 SimpleStatement: VariableDefinition •

    $default  reduce using rule 123 (SimpleStatement)


State 244

  122 SimpleStatement: Expression •
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 122 (SimpleStatement)

    Operator  go to state 202
    Unary1    go to state 203


State 245

   84 TypeName: ElementaryTypeName •
  166 PrimaryExpression: ElementaryTypeName •

    MEMORY      reduce using rule 84 (TypeName)
    STORAGE     reduce using rule 84 (TypeName)
    CALLDATA    reduce using rule 84 (TypeName)
    OPT_L       reduce using rule 84 (TypeName)
    IDENTIFIER  reduce using rule 84 (TypeName)
    $default    reduce using rule 166 (PrimaryExpression)


State 246

   91 Mapping: MAPPING L_PAREN ElementaryTypeName IMPLIES TypeName • R_PAREN
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    OPT_L    shift, and go to state 74
    R_PAREN  shift, and go to state 304


State 247

   35 EventParameterList: L_PAREN EventParameter R_PAREN •

    $default  reduce using rule 35 (EventParameterList)


State 248

   39 EventParameter: TypeName IDENTIFIER • COMMA EventParameter
   40               | TypeName IDENTIFIER •

    COMMA  shift, and go to state 305

    $default  reduce using rule 40 (EventParameter)


State 249

   37 EventParameter: TypeName INDEXED • IDENTIFIER COMMA EventParameter
   38               | TypeName INDEXED • IDENTIFIER

    IDENTIFIER  shift, and go to state 306


State 250

   33 EventDefinition: EVENT IDENTIFIER EventParameterList ANONYMOUS SEMICOLON •

    $default  reduce using rule 33 (EventDefinition)


State 251

   20 UsingForDeclaration: USING IDENTIFIER FOR STAR SEMICOLON •

    $default  reduce using rule 20 (UsingForDeclaration)


State 252

   21 UsingForDeclaration: USING IDENTIFIER FOR TypeName SEMICOLON •

    $default  reduce using rule 21 (UsingForDeclaration)


State 253

   32 ModifierInvocation: IDENTIFIER L_PAREN R_PAREN •

    $default  reduce using rule 32 (ModifierInvocation)


State 254

   31 ModifierInvocation: IDENTIFIER L_PAREN ExpressionList • R_PAREN

    R_PAREN  shift, and go to state 307


State 255

  168 ExpressionList: Expression COMMA • ExpressionList

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 168
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    ExpressionList      go to state 308
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 256

  137 Expression: OPT_L ExpressionList OPT_R •

    $default  reduce using rule 137 (Expression)


State 257

  138 Expression: L_PAREN Expression R_PAREN •

    $default  reduce using rule 138 (Expression)


State 258

  179 MemberAccess: IDENTIFIER DOT IDENTIFIER •
  182 IndexAccess: IDENTIFIER • OPT_L Expression OPT_R IndexAccess2
  183            | IDENTIFIER • OPT_L OPT_R

    OPT_L  shift, and go to state 183

    $default  reduce using rule 179 (MemberAccess)


State 259

  180 MemberAccess: IDENTIFIER DOT IndexAccess •

    $default  reduce using rule 180 (MemberAccess)


State 260

  183 IndexAccess: IDENTIFIER OPT_L OPT_R •

    $default  reduce using rule 183 (IndexAccess)


State 261

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess
  182 IndexAccess: IDENTIFIER OPT_L Expression • OPT_R IndexAccess2

    DOT        shift, and go to state 186
    OPT_R      shift, and go to state 309
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 262

  178 MemberAccess: Expression DOT IDENTIFIER •
  182 IndexAccess: IDENTIFIER • OPT_L Expression OPT_R IndexAccess2
  183            | IDENTIFIER • OPT_L OPT_R

    OPT_L  shift, and go to state 183

    $default  reduce using rule 178 (MemberAccess)


State 263

  181 MemberAccess: Expression DOT IndexAccess •

    $default  reduce using rule 181 (MemberAccess)


State 264

  172 FunctionCallArguments: L_CURLY_B • NameValueList R_CURLY_B
  173                      | L_CURLY_B • R_CURLY_B

    R_CURLY_B   shift, and go to state 310
    IDENTIFIER  shift, and go to state 311

    NameValueList  go to state 312


State 265

  176 FunctionCall: Expression L_PAREN R_PAREN •

    $default  reduce using rule 176 (FunctionCall)


State 266

  174 FunctionCallArguments: ExpressionList •

    $default  reduce using rule 174 (FunctionCallArguments)


State 267

  175 FunctionCall: Expression L_PAREN FunctionCallArguments • R_PAREN

    R_PAREN  shift, and go to state 313


State 268

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  143           | Expression REL_OP Expression •
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    DOT        [reduce using rule 143 (Expression)]
    PLUS       [reduce using rule 143 (Expression)]
    EQUAL      [reduce using rule 143 (Expression)]
    EQUAL2     [reduce using rule 143 (Expression)]
    PLUS2      [reduce using rule 143 (Expression)]
    MINUS2     [reduce using rule 143 (Expression)]
    L_PAREN    [reduce using rule 143 (Expression)]
    CARET      [reduce using rule 143 (Expression)]
    MOD        [reduce using rule 143 (Expression)]
    REL_OP     [reduce using rule 143 (Expression)]
    LOG_OP     [reduce using rule 143 (Expression)]
    QUES_MARK  [reduce using rule 143 (Expression)]
    STAR       [reduce using rule 143 (Expression)]
    MINUS      [reduce using rule 143 (Expression)]
    DIVIDE     [reduce using rule 143 (Expression)]
    $default   reduce using rule 143 (Expression)

    Operator  go to state 202
    Unary1    go to state 203


State 269

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  140           | Expression LOG_OP Expression •
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    DOT        [reduce using rule 140 (Expression)]
    PLUS       [reduce using rule 140 (Expression)]
    EQUAL      [reduce using rule 140 (Expression)]
    EQUAL2     [reduce using rule 140 (Expression)]
    PLUS2      [reduce using rule 140 (Expression)]
    MINUS2     [reduce using rule 140 (Expression)]
    L_PAREN    [reduce using rule 140 (Expression)]
    CARET      [reduce using rule 140 (Expression)]
    MOD        [reduce using rule 140 (Expression)]
    REL_OP     [reduce using rule 140 (Expression)]
    LOG_OP     [reduce using rule 140 (Expression)]
    QUES_MARK  [reduce using rule 140 (Expression)]
    STAR       [reduce using rule 140 (Expression)]
    MINUS      [reduce using rule 140 (Expression)]
    DIVIDE     [reduce using rule 140 (Expression)]
    $default   reduce using rule 140 (Expression)

    Operator  go to state 202
    Unary1    go to state 203


State 270

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  141           | Expression QUES_MARK Expression • COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    COLON      shift, and go to state 314
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 271

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  142           | Expression Operator Expression •
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    DOT        [reduce using rule 142 (Expression)]
    PLUS       [reduce using rule 142 (Expression)]
    EQUAL      [reduce using rule 142 (Expression)]
    EQUAL2     [reduce using rule 142 (Expression)]
    PLUS2      [reduce using rule 142 (Expression)]
    MINUS2     [reduce using rule 142 (Expression)]
    L_PAREN    [reduce using rule 142 (Expression)]
    CARET      [reduce using rule 142 (Expression)]
    MOD        [reduce using rule 142 (Expression)]
    REL_OP     [reduce using rule 142 (Expression)]
    LOG_OP     [reduce using rule 142 (Expression)]
    QUES_MARK  [reduce using rule 142 (Expression)]
    STAR       [reduce using rule 142 (Expression)]
    MINUS      [reduce using rule 142 (Expression)]
    DIVIDE     [reduce using rule 142 (Expression)]
    $default   reduce using rule 142 (Expression)

    Operator  go to state 202
    Unary1    go to state 203


State 272

   48 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER EQUAL Expression • SEMICOLON
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201
    SEMICOLON  shift, and go to state 315

    Operator  go to state 202
    Unary1    go to state 203


State 273

   45 EnumValues: COMMA EnumValue • EnumValues

    COMMA  shift, and go to state 208

    $default  reduce using rule 46 (EnumValues)

    EnumValues  go to state 316


State 274

   44 EnumDefinition: ENUM IDENTIFIER L_CURLY_B EnumValue EnumValues R_CURLY_B •

    $default  reduce using rule 44 (EnumDefinition)


State 275

   23 Vars: VariableDeclaration SEMICOLON Vars •

    $default  reduce using rule 23 (Vars)


State 276

   83 VariableDeclaration: TypeName IDENTIFIER EQUAL • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 317
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 277

   80 VariableDeclaration: TypeName StorageLocation IDENTIFIER • EQUAL Expression
   81                    | TypeName StorageLocation IDENTIFIER •

    EQUAL  shift, and go to state 318

    $default  reduce using rule 81 (VariableDeclaration)


State 278

   70 Parameter: TypeName IDENTIFIER COMMA $@4 • Parameter

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    $default  reduce using rule 74 (Parameter)

    Parameter            go to state 319
    TypeName             go to state 89
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 279

   75 ReturnList: L_PAREN • Parameter2 R_PAREN

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    Parameter2           go to state 320
    TypeName             go to state 321
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 280

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute RETURNS ReturnList • Block

    L_CURLY_B  shift, and go to state 92
    SEMICOLON  shift, and go to state 93

    Block  go to state 322


State 281

  100 Statement: L_CURLY_B Statement R_CURLY_B •

    $default  reduce using rule 100 (Statement)


State 282

  121 WhileStatement: WHILE L_PAREN • Expression R_PAREN Statement

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 323
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 283

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON
  125 DoWhileStatement: DO Statement • WHILE L_PAREN Expression R_PAREN

    WHILE           shift, and go to state 324
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 284

  124 ForStatement: FOR L_PAREN • SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN Statement

    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    SimpleStatement      go to state 325
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 285

  119 IfStatement: IF L_PAREN • Expression R_PAREN Statement
  120            | IF L_PAREN • Expression R_PAREN Statement ELSE Statement

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 326
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 286

  103 Statement: Statement CONTINUE SEMICOLON •

    $default  reduce using rule 103 (Statement)


State 287

  104 Statement: Statement BREAK SEMICOLON •

    $default  reduce using rule 104 (Statement)


State 288

  105 Statement: Statement RETURN L_PAREN • ExpressionList R_PAREN SEMICOLON
  138 Expression: L_PAREN • Expression R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 327
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    ExpressionList      go to state 328
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 289

  107 Statement: Statement RETURN SEMICOLON •

    $default  reduce using rule 107 (Statement)


State 290

  106 Statement: Statement RETURN Expression • SEMICOLON
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201
    SEMICOLON  shift, and go to state 329

    Operator  go to state 202
    Unary1    go to state 203


State 291

  130 VarDec2: COMMA • VariableDeclaration

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    VariableDeclaration  go to state 330
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 292

  128 VariableDefinition: L_PAREN VariableDeclaration • VarDec2 R_PAREN EQUAL Expression

    COMMA  shift, and go to state 291

    $default  reduce using rule 131 (VarDec2)

    VarDec2  go to state 331


State 293

  129 VariableDefinition: L_PAREN VarDec2 • R_PAREN

    R_PAREN  shift, and go to state 332


State 294

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 295

  126 EmitStatement: EMIT FunctionCall •
  135 Expression: FunctionCall •

    SEMICOLON  reduce using rule 126 (EmitStatement)
    $default   reduce using rule 135 (Expression)


State 296

  111 Statement: Statement UNDERSCORE SEMICOLON •

    $default  reduce using rule 111 (Statement)


State 297

  114 AssertStatement: REQUIRE L_PAREN • Expression R_PAREN
  116                | REQUIRE L_PAREN • Expression COMMA STRING_LITERAL R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 333
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 298

  115 AssertStatement: ASSERT L_PAREN • Expression R_PAREN
  117                | ASSERT L_PAREN • Expression COMMA STRING_LITERAL R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 334
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 299

  108 Statement: Statement THROW SEMICOLON •

    $default  reduce using rule 108 (Statement)


State 300

  112 Statement: Statement AssertStatement SEMICOLON •

    $default  reduce using rule 112 (Statement)


State 301

  101 Statement: Statement SimpleStatement SEMICOLON •

    $default  reduce using rule 101 (Statement)


State 302

  102 Statement: Statement DoWhileStatement SEMICOLON •

    $default  reduce using rule 102 (Statement)


State 303

  109 Statement: Statement EmitStatement SEMICOLON •

    $default  reduce using rule 109 (Statement)


State 304

   91 Mapping: MAPPING L_PAREN ElementaryTypeName IMPLIES TypeName R_PAREN •

    $default  reduce using rule 91 (Mapping)


State 305

   39 EventParameter: TypeName IDENTIFIER COMMA • EventParameter

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    EventParameter       go to state 335
    TypeName             go to state 158
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 306

   37 EventParameter: TypeName INDEXED IDENTIFIER • COMMA EventParameter
   38               | TypeName INDEXED IDENTIFIER •

    COMMA  shift, and go to state 336

    $default  reduce using rule 38 (EventParameter)


State 307

   31 ModifierInvocation: IDENTIFIER L_PAREN ExpressionList R_PAREN •

    $default  reduce using rule 31 (ModifierInvocation)


State 308

  168 ExpressionList: Expression COMMA ExpressionList •

    $default  reduce using rule 168 (ExpressionList)


State 309

  182 IndexAccess: IDENTIFIER OPT_L Expression OPT_R • IndexAccess2

    OPT_L  shift, and go to state 337

    $default  reduce using rule 186 (IndexAccess2)

    IndexAccess2  go to state 338


State 310

  173 FunctionCallArguments: L_CURLY_B R_CURLY_B •

    $default  reduce using rule 173 (FunctionCallArguments)


State 311

  171 NameValueList: IDENTIFIER • COLON Expression NameValue

    COLON  shift, and go to state 339


State 312

  172 FunctionCallArguments: L_CURLY_B NameValueList • R_CURLY_B

    R_CURLY_B  shift, and go to state 340


State 313

  175 FunctionCall: Expression L_PAREN FunctionCallArguments R_PAREN •

    $default  reduce using rule 175 (FunctionCall)


State 314

  141 Expression: Expression QUES_MARK Expression COLON • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 341
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 315

   48 StateVariableDeclaration: TypeName VariableAttribute IDENTIFIER EQUAL Expression SEMICOLON •

    $default  reduce using rule 48 (StateVariableDeclaration)


State 316

   45 EnumValues: COMMA EnumValue EnumValues •

    $default  reduce using rule 45 (EnumValues)


State 317

   83 VariableDeclaration: TypeName IDENTIFIER EQUAL Expression •
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 83 (VariableDeclaration)

    Operator  go to state 202
    Unary1    go to state 203


State 318

   80 VariableDeclaration: TypeName StorageLocation IDENTIFIER EQUAL • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 342
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 319

   70 Parameter: TypeName IDENTIFIER COMMA $@4 Parameter •

    $default  reduce using rule 70 (Parameter)


State 320

   75 ReturnList: L_PAREN Parameter2 • R_PAREN

    R_PAREN  shift, and go to state 343


State 321

   76 Parameter2: TypeName •
   77           | TypeName • IDENTIFIER
   78           | TypeName • COMMA Parameter2
   79           | TypeName • IDENTIFIER COMMA Parameter2
   92 ArrayTypeName: TypeName • OPT_L OPT_R
   93              | TypeName • OPT_L Expression OPT_R

    OPT_L       shift, and go to state 74
    IDENTIFIER  shift, and go to state 344
    COMMA       shift, and go to state 345

    $default  reduce using rule 76 (Parameter2)


State 322

   64 FunctionDefinition: FUNCTION IDENTIFIER ParameterList FunctionAttribute RETURNS ReturnList Block •

    $default  reduce using rule 64 (FunctionDefinition)


State 323

  121 WhileStatement: WHILE L_PAREN Expression • R_PAREN Statement
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 346
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 324

  121 WhileStatement: WHILE • L_PAREN Expression R_PAREN Statement
  125 DoWhileStatement: DO Statement WHILE • L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 347


State 325

  124 ForStatement: FOR L_PAREN SimpleStatement • SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN Statement

    SEMICOLON  shift, and go to state 348


State 326

  119 IfStatement: IF L_PAREN Expression • R_PAREN Statement
  120            | IF L_PAREN Expression • R_PAREN Statement ELSE Statement
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 349
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 327

  132 Expression: Expression • Unary1
  138           | L_PAREN Expression • R_PAREN
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  167 ExpressionList: Expression •
  168               | Expression • COMMA ExpressionList
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 257
    COMMA      shift, and go to state 255
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    R_PAREN  [reduce using rule 167 (ExpressionList)]

    Operator  go to state 202
    Unary1    go to state 203


State 328

  105 Statement: Statement RETURN L_PAREN ExpressionList • R_PAREN SEMICOLON

    R_PAREN  shift, and go to state 350


State 329

  106 Statement: Statement RETURN Expression SEMICOLON •

    $default  reduce using rule 106 (Statement)


State 330

  130 VarDec2: COMMA VariableDeclaration •

    $default  reduce using rule 130 (VarDec2)


State 331

  128 VariableDefinition: L_PAREN VariableDeclaration VarDec2 • R_PAREN EQUAL Expression

    R_PAREN  shift, and go to state 351


State 332

  129 VariableDefinition: L_PAREN VarDec2 R_PAREN •

    $default  reduce using rule 129 (VariableDefinition)


State 333

  114 AssertStatement: REQUIRE L_PAREN Expression • R_PAREN
  116                | REQUIRE L_PAREN Expression • COMMA STRING_LITERAL R_PAREN
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 352
    COMMA      shift, and go to state 353
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 334

  115 AssertStatement: ASSERT L_PAREN Expression • R_PAREN
  117                | ASSERT L_PAREN Expression • COMMA STRING_LITERAL R_PAREN
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 354
    COMMA      shift, and go to state 355
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 335

   39 EventParameter: TypeName IDENTIFIER COMMA EventParameter •

    $default  reduce using rule 39 (EventParameter)


State 336

   37 EventParameter: TypeName INDEXED IDENTIFIER COMMA • EventParameter

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    EventParameter       go to state 356
    TypeName             go to state 158
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 337

  184 IndexAccess2: OPT_L • Expression OPT_R
  185             | OPT_L • OPT_R

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    OPT_R           shift, and go to state 357
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 358
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 338

  182 IndexAccess: IDENTIFIER OPT_L Expression OPT_R IndexAccess2 •

    $default  reduce using rule 182 (IndexAccess)


State 339

  171 NameValueList: IDENTIFIER COLON • Expression NameValue

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 359
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 340

  172 FunctionCallArguments: L_CURLY_B NameValueList R_CURLY_B •

    $default  reduce using rule 172 (FunctionCallArguments)


State 341

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  141           | Expression QUES_MARK Expression COLON Expression •
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    DOT        [reduce using rule 141 (Expression)]
    PLUS       [reduce using rule 141 (Expression)]
    EQUAL      [reduce using rule 141 (Expression)]
    EQUAL2     [reduce using rule 141 (Expression)]
    PLUS2      [reduce using rule 141 (Expression)]
    MINUS2     [reduce using rule 141 (Expression)]
    L_PAREN    [reduce using rule 141 (Expression)]
    CARET      [reduce using rule 141 (Expression)]
    MOD        [reduce using rule 141 (Expression)]
    REL_OP     [reduce using rule 141 (Expression)]
    LOG_OP     [reduce using rule 141 (Expression)]
    QUES_MARK  [reduce using rule 141 (Expression)]
    STAR       [reduce using rule 141 (Expression)]
    MINUS      [reduce using rule 141 (Expression)]
    DIVIDE     [reduce using rule 141 (Expression)]
    $default   reduce using rule 141 (Expression)

    Operator  go to state 202
    Unary1    go to state 203


State 342

   80 VariableDeclaration: TypeName StorageLocation IDENTIFIER EQUAL Expression •
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 80 (VariableDeclaration)

    Operator  go to state 202
    Unary1    go to state 203


State 343

   75 ReturnList: L_PAREN Parameter2 R_PAREN •

    $default  reduce using rule 75 (ReturnList)


State 344

   77 Parameter2: TypeName IDENTIFIER •
   79           | TypeName IDENTIFIER • COMMA Parameter2

    COMMA  shift, and go to state 360

    $default  reduce using rule 77 (Parameter2)


State 345

   78 Parameter2: TypeName COMMA • Parameter2

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    Parameter2           go to state 361
    TypeName             go to state 321
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 346

  121 WhileStatement: WHILE L_PAREN Expression R_PAREN • Statement

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 362


State 347

  121 WhileStatement: WHILE L_PAREN • Expression R_PAREN Statement
  125 DoWhileStatement: DO Statement WHILE L_PAREN • Expression R_PAREN

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 363
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 348

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON • Expression SEMICOLON ExpressionStatement R_PAREN Statement

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 364
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 349

  119 IfStatement: IF L_PAREN Expression R_PAREN • Statement
  120            | IF L_PAREN Expression R_PAREN • Statement ELSE Statement

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 365


State 350

  105 Statement: Statement RETURN L_PAREN ExpressionList R_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 366


State 351

  128 VariableDefinition: L_PAREN VariableDeclaration VarDec2 R_PAREN • EQUAL Expression

    EQUAL  shift, and go to state 367


State 352

  114 AssertStatement: REQUIRE L_PAREN Expression R_PAREN •

    $default  reduce using rule 114 (AssertStatement)


State 353

  116 AssertStatement: REQUIRE L_PAREN Expression COMMA • STRING_LITERAL R_PAREN

    STRING_LITERAL  shift, and go to state 368


State 354

  115 AssertStatement: ASSERT L_PAREN Expression R_PAREN •

    $default  reduce using rule 115 (AssertStatement)


State 355

  117 AssertStatement: ASSERT L_PAREN Expression COMMA • STRING_LITERAL R_PAREN

    STRING_LITERAL  shift, and go to state 369


State 356

   37 EventParameter: TypeName INDEXED IDENTIFIER COMMA EventParameter •

    $default  reduce using rule 37 (EventParameter)


State 357

  185 IndexAccess2: OPT_L OPT_R •

    $default  reduce using rule 185 (IndexAccess2)


State 358

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess
  184 IndexAccess2: OPT_L Expression • OPT_R

    DOT        shift, and go to state 186
    OPT_R      shift, and go to state 370
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 359

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  171 NameValueList: IDENTIFIER COLON Expression • NameValue
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    COMMA      shift, and go to state 371
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 170 (NameValue)

    Operator   go to state 202
    Unary1     go to state 203
    NameValue  go to state 372


State 360

   79 Parameter2: TypeName IDENTIFIER COMMA • Parameter2

    FUNCTION    shift, and go to state 86
    ADDRESS     shift, and go to state 22
    BOOL        shift, and go to state 23
    BYTE        shift, and go to state 24
    MAPPING     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    UINT        shift, and go to state 27
    AUTO        shift, and go to state 31
    STRING      shift, and go to state 32
    INT         shift, and go to state 33

    Parameter2           go to state 373
    TypeName             go to state 321
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    ElementaryTypeName   go to state 47


State 361

   78 Parameter2: TypeName COMMA Parameter2 •

    $default  reduce using rule 78 (Parameter2)


State 362

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON
  121 WhileStatement: WHILE L_PAREN Expression R_PAREN Statement •

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    WHILE           [reduce using rule 121 (WhileStatement)]
    DO              [reduce using rule 121 (WhileStatement)]
    FOR             [reduce using rule 121 (WhileStatement)]
    IF              [reduce using rule 121 (WhileStatement)]
    CONTINUE        [reduce using rule 121 (WhileStatement)]
    BREAK           [reduce using rule 121 (WhileStatement)]
    RETURN          [reduce using rule 121 (WhileStatement)]
    FUNCTION        [reduce using rule 121 (WhileStatement)]
    ADDRESS         [reduce using rule 121 (WhileStatement)]
    BOOL            [reduce using rule 121 (WhileStatement)]
    OPT_L           [reduce using rule 121 (WhileStatement)]
    BYTE            [reduce using rule 121 (WhileStatement)]
    MAPPING         [reduce using rule 121 (WhileStatement)]
    HEX_NUMBER      [reduce using rule 121 (WhileStatement)]
    STRING_LITERAL  [reduce using rule 121 (WhileStatement)]
    PLUS            [reduce using rule 121 (WhileStatement)]
    PLUS2           [reduce using rule 121 (WhileStatement)]
    MINUS2          [reduce using rule 121 (WhileStatement)]
    L_PAREN         [reduce using rule 121 (WhileStatement)]
    IDENTIFIER      [reduce using rule 121 (WhileStatement)]
    DECIMAL_NUMBER  [reduce using rule 121 (WhileStatement)]
    EMIT            [reduce using rule 121 (WhileStatement)]
    UINT            [reduce using rule 121 (WhileStatement)]
    UNDERSCORE      [reduce using rule 121 (WhileStatement)]
    NOT             [reduce using rule 121 (WhileStatement)]
    TRUE            [reduce using rule 121 (WhileStatement)]
    FALSE           [reduce using rule 121 (WhileStatement)]
    DELETE          [reduce using rule 121 (WhileStatement)]
    REQUIRE         [reduce using rule 121 (WhileStatement)]
    ASSERT          [reduce using rule 121 (WhileStatement)]
    AUTO            [reduce using rule 121 (WhileStatement)]
    THROW           [reduce using rule 121 (WhileStatement)]
    STRING          [reduce using rule 121 (WhileStatement)]
    INT             [reduce using rule 121 (WhileStatement)]
    NEW             [reduce using rule 121 (WhileStatement)]
    MINUS           [reduce using rule 121 (WhileStatement)]
    TILDE           [reduce using rule 121 (WhileStatement)]
    $default        reduce using rule 121 (WhileStatement)

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 363

  121 WhileStatement: WHILE L_PAREN Expression • R_PAREN Statement
  125 DoWhileStatement: DO Statement WHILE L_PAREN Expression • R_PAREN
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    R_PAREN    shift, and go to state 374
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    Operator  go to state 202
    Unary1    go to state 203


State 364

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression • SEMICOLON ExpressionStatement R_PAREN Statement
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201
    SEMICOLON  shift, and go to state 375

    Operator  go to state 202
    Unary1    go to state 203


State 365

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON
  119 IfStatement: IF L_PAREN Expression R_PAREN Statement •
  120            | IF L_PAREN Expression R_PAREN Statement • ELSE Statement

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    ELSE            shift, and go to state 376
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    WHILE           [reduce using rule 119 (IfStatement)]
    DO              [reduce using rule 119 (IfStatement)]
    FOR             [reduce using rule 119 (IfStatement)]
    IF              [reduce using rule 119 (IfStatement)]
    CONTINUE        [reduce using rule 119 (IfStatement)]
    BREAK           [reduce using rule 119 (IfStatement)]
    RETURN          [reduce using rule 119 (IfStatement)]
    FUNCTION        [reduce using rule 119 (IfStatement)]
    ADDRESS         [reduce using rule 119 (IfStatement)]
    BOOL            [reduce using rule 119 (IfStatement)]
    OPT_L           [reduce using rule 119 (IfStatement)]
    BYTE            [reduce using rule 119 (IfStatement)]
    MAPPING         [reduce using rule 119 (IfStatement)]
    HEX_NUMBER      [reduce using rule 119 (IfStatement)]
    STRING_LITERAL  [reduce using rule 119 (IfStatement)]
    PLUS            [reduce using rule 119 (IfStatement)]
    PLUS2           [reduce using rule 119 (IfStatement)]
    MINUS2          [reduce using rule 119 (IfStatement)]
    L_PAREN         [reduce using rule 119 (IfStatement)]
    IDENTIFIER      [reduce using rule 119 (IfStatement)]
    DECIMAL_NUMBER  [reduce using rule 119 (IfStatement)]
    EMIT            [reduce using rule 119 (IfStatement)]
    UINT            [reduce using rule 119 (IfStatement)]
    UNDERSCORE      [reduce using rule 119 (IfStatement)]
    NOT             [reduce using rule 119 (IfStatement)]
    TRUE            [reduce using rule 119 (IfStatement)]
    FALSE           [reduce using rule 119 (IfStatement)]
    DELETE          [reduce using rule 119 (IfStatement)]
    REQUIRE         [reduce using rule 119 (IfStatement)]
    ASSERT          [reduce using rule 119 (IfStatement)]
    AUTO            [reduce using rule 119 (IfStatement)]
    ELSE            [reduce using rule 119 (IfStatement)]
    THROW           [reduce using rule 119 (IfStatement)]
    STRING          [reduce using rule 119 (IfStatement)]
    INT             [reduce using rule 119 (IfStatement)]
    NEW             [reduce using rule 119 (IfStatement)]
    MINUS           [reduce using rule 119 (IfStatement)]
    TILDE           [reduce using rule 119 (IfStatement)]
    $default        reduce using rule 119 (IfStatement)

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 366

  105 Statement: Statement RETURN L_PAREN ExpressionList R_PAREN SEMICOLON •

    $default  reduce using rule 105 (Statement)


State 367

  128 VariableDefinition: L_PAREN VariableDeclaration VarDec2 R_PAREN EQUAL • Expression

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 377
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 368

  116 AssertStatement: REQUIRE L_PAREN Expression COMMA STRING_LITERAL • R_PAREN

    R_PAREN  shift, and go to state 378


State 369

  117 AssertStatement: ASSERT L_PAREN Expression COMMA STRING_LITERAL • R_PAREN

    R_PAREN  shift, and go to state 379


State 370

  184 IndexAccess2: OPT_L Expression OPT_R •

    $default  reduce using rule 184 (IndexAccess2)


State 371

  169 NameValue: COMMA • IDENTIFIER COLON Expression NameValue

    IDENTIFIER  shift, and go to state 380


State 372

  171 NameValueList: IDENTIFIER COLON Expression NameValue •

    $default  reduce using rule 171 (NameValueList)


State 373

   79 Parameter2: TypeName IDENTIFIER COMMA Parameter2 •

    $default  reduce using rule 79 (Parameter2)


State 374

  121 WhileStatement: WHILE L_PAREN Expression R_PAREN • Statement
  125 DoWhileStatement: DO Statement WHILE L_PAREN Expression R_PAREN •

    L_CURLY_B  shift, and go to state 152

    SEMICOLON  reduce using rule 125 (DoWhileStatement)
    $default   reduce using rule 113 (Statement)

    Statement  go to state 362


State 375

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON • ExpressionStatement R_PAREN Statement

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    ExpressionStatement  go to state 381
    Expression           go to state 382
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 132


State 376

  120 IfStatement: IF L_PAREN Expression R_PAREN Statement ELSE • Statement

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 383


State 377

  128 VariableDefinition: L_PAREN VariableDeclaration VarDec2 R_PAREN EQUAL Expression •
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 128 (VariableDefinition)

    Operator  go to state 202
    Unary1    go to state 203


State 378

  116 AssertStatement: REQUIRE L_PAREN Expression COMMA STRING_LITERAL R_PAREN •

    $default  reduce using rule 116 (AssertStatement)


State 379

  117 AssertStatement: ASSERT L_PAREN Expression COMMA STRING_LITERAL R_PAREN •

    $default  reduce using rule 117 (AssertStatement)


State 380

  169 NameValue: COMMA IDENTIFIER • COLON Expression NameValue

    COLON  shift, and go to state 384


State 381

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement • R_PAREN Statement

    R_PAREN  shift, and go to state 385


State 382

  118 ExpressionStatement: Expression •
  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 118 (ExpressionStatement)

    Operator  go to state 202
    Unary1    go to state 203


State 383

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON
  120 IfStatement: IF L_PAREN Expression R_PAREN Statement ELSE Statement •

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    WHILE           [reduce using rule 120 (IfStatement)]
    DO              [reduce using rule 120 (IfStatement)]
    FOR             [reduce using rule 120 (IfStatement)]
    IF              [reduce using rule 120 (IfStatement)]
    CONTINUE        [reduce using rule 120 (IfStatement)]
    BREAK           [reduce using rule 120 (IfStatement)]
    RETURN          [reduce using rule 120 (IfStatement)]
    FUNCTION        [reduce using rule 120 (IfStatement)]
    ADDRESS         [reduce using rule 120 (IfStatement)]
    BOOL            [reduce using rule 120 (IfStatement)]
    OPT_L           [reduce using rule 120 (IfStatement)]
    BYTE            [reduce using rule 120 (IfStatement)]
    MAPPING         [reduce using rule 120 (IfStatement)]
    HEX_NUMBER      [reduce using rule 120 (IfStatement)]
    STRING_LITERAL  [reduce using rule 120 (IfStatement)]
    PLUS            [reduce using rule 120 (IfStatement)]
    PLUS2           [reduce using rule 120 (IfStatement)]
    MINUS2          [reduce using rule 120 (IfStatement)]
    L_PAREN         [reduce using rule 120 (IfStatement)]
    IDENTIFIER      [reduce using rule 120 (IfStatement)]
    DECIMAL_NUMBER  [reduce using rule 120 (IfStatement)]
    EMIT            [reduce using rule 120 (IfStatement)]
    UINT            [reduce using rule 120 (IfStatement)]
    UNDERSCORE      [reduce using rule 120 (IfStatement)]
    NOT             [reduce using rule 120 (IfStatement)]
    TRUE            [reduce using rule 120 (IfStatement)]
    FALSE           [reduce using rule 120 (IfStatement)]
    DELETE          [reduce using rule 120 (IfStatement)]
    REQUIRE         [reduce using rule 120 (IfStatement)]
    ASSERT          [reduce using rule 120 (IfStatement)]
    AUTO            [reduce using rule 120 (IfStatement)]
    THROW           [reduce using rule 120 (IfStatement)]
    STRING          [reduce using rule 120 (IfStatement)]
    INT             [reduce using rule 120 (IfStatement)]
    NEW             [reduce using rule 120 (IfStatement)]
    MINUS           [reduce using rule 120 (IfStatement)]
    TILDE           [reduce using rule 120 (IfStatement)]
    $default        reduce using rule 120 (IfStatement)

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 384

  169 NameValue: COMMA IDENTIFIER COLON • Expression NameValue

    ADDRESS         shift, and go to state 96
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 113
    IDENTIFIER      shift, and go to state 114
    DECIMAL_NUMBER  shift, and go to state 115
    UINT            shift, and go to state 27
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    AUTO            shift, and go to state 31
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    Expression          go to state 386
    Unary2              go to state 124
    PrimaryExpression   go to state 125
    FunctionCall        go to state 126
    NewExpression       go to state 127
    MemberAccess        go to state 128
    IndexAccess         go to state 129
    BooleanLiteral      go to state 130
    NumberLiteral       go to state 131
    ElementaryTypeName  go to state 132


State 385

  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN • Statement

    L_CURLY_B  shift, and go to state 152

    $default  reduce using rule 113 (Statement)

    Statement  go to state 387


State 386

  132 Expression: Expression • Unary1
  140           | Expression • LOG_OP Expression
  141           | Expression • QUES_MARK Expression COLON Expression
  142           | Expression • Operator Expression
  143           | Expression • REL_OP Expression
  169 NameValue: COMMA IDENTIFIER COLON Expression • NameValue
  175 FunctionCall: Expression • L_PAREN FunctionCallArguments R_PAREN
  176             | Expression • L_PAREN R_PAREN
  178 MemberAccess: Expression • DOT IDENTIFIER
  181             | Expression • DOT IndexAccess

    DOT        shift, and go to state 186
    PLUS       shift, and go to state 188
    EQUAL      shift, and go to state 189
    EQUAL2     shift, and go to state 190
    PLUS2      shift, and go to state 191
    MINUS2     shift, and go to state 192
    L_PAREN    shift, and go to state 193
    CARET      shift, and go to state 194
    MOD        shift, and go to state 195
    REL_OP     shift, and go to state 196
    LOG_OP     shift, and go to state 197
    QUES_MARK  shift, and go to state 198
    COMMA      shift, and go to state 371
    STAR       shift, and go to state 199
    MINUS      shift, and go to state 200
    DIVIDE     shift, and go to state 201

    $default  reduce using rule 170 (NameValue)

    Operator   go to state 202
    Unary1     go to state 203
    NameValue  go to state 388


State 387

   97 Statement: Statement • IfStatement
   98          | Statement • WhileStatement
   99          | Statement • ForStatement
  101          | Statement • SimpleStatement SEMICOLON
  102          | Statement • DoWhileStatement SEMICOLON
  103          | Statement • CONTINUE SEMICOLON
  104          | Statement • BREAK SEMICOLON
  105          | Statement • RETURN L_PAREN ExpressionList R_PAREN SEMICOLON
  106          | Statement • RETURN Expression SEMICOLON
  107          | Statement • RETURN SEMICOLON
  108          | Statement • THROW SEMICOLON
  109          | Statement • EmitStatement SEMICOLON
  110          | Statement • UNDERSCORE
  111          | Statement • UNDERSCORE SEMICOLON
  112          | Statement • AssertStatement SEMICOLON
  124 ForStatement: FOR L_PAREN SimpleStatement SEMICOLON Expression SEMICOLON ExpressionStatement R_PAREN Statement •

    WHILE           shift, and go to state 220
    DO              shift, and go to state 221
    FOR             shift, and go to state 222
    IF              shift, and go to state 223
    CONTINUE        shift, and go to state 224
    BREAK           shift, and go to state 225
    RETURN          shift, and go to state 226
    FUNCTION        shift, and go to state 86
    ADDRESS         shift, and go to state 22
    BOOL            shift, and go to state 23
    OPT_L           shift, and go to state 106
    BYTE            shift, and go to state 24
    MAPPING         shift, and go to state 25
    HEX_NUMBER      shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109
    PLUS            shift, and go to state 110
    PLUS2           shift, and go to state 111
    MINUS2          shift, and go to state 112
    L_PAREN         shift, and go to state 228
    IDENTIFIER      shift, and go to state 229
    DECIMAL_NUMBER  shift, and go to state 115
    EMIT            shift, and go to state 230
    UINT            shift, and go to state 27
    UNDERSCORE      shift, and go to state 231
    NOT             shift, and go to state 116
    TRUE            shift, and go to state 117
    FALSE           shift, and go to state 118
    DELETE          shift, and go to state 119
    REQUIRE         shift, and go to state 232
    ASSERT          shift, and go to state 233
    AUTO            shift, and go to state 31
    THROW           shift, and go to state 234
    STRING          shift, and go to state 32
    INT             shift, and go to state 33
    NEW             shift, and go to state 120
    MINUS           shift, and go to state 121
    TILDE           shift, and go to state 122

    WHILE           [reduce using rule 124 (ForStatement)]
    DO              [reduce using rule 124 (ForStatement)]
    FOR             [reduce using rule 124 (ForStatement)]
    IF              [reduce using rule 124 (ForStatement)]
    CONTINUE        [reduce using rule 124 (ForStatement)]
    BREAK           [reduce using rule 124 (ForStatement)]
    RETURN          [reduce using rule 124 (ForStatement)]
    FUNCTION        [reduce using rule 124 (ForStatement)]
    ADDRESS         [reduce using rule 124 (ForStatement)]
    BOOL            [reduce using rule 124 (ForStatement)]
    OPT_L           [reduce using rule 124 (ForStatement)]
    BYTE            [reduce using rule 124 (ForStatement)]
    MAPPING         [reduce using rule 124 (ForStatement)]
    HEX_NUMBER      [reduce using rule 124 (ForStatement)]
    STRING_LITERAL  [reduce using rule 124 (ForStatement)]
    PLUS            [reduce using rule 124 (ForStatement)]
    PLUS2           [reduce using rule 124 (ForStatement)]
    MINUS2          [reduce using rule 124 (ForStatement)]
    L_PAREN         [reduce using rule 124 (ForStatement)]
    IDENTIFIER      [reduce using rule 124 (ForStatement)]
    DECIMAL_NUMBER  [reduce using rule 124 (ForStatement)]
    EMIT            [reduce using rule 124 (ForStatement)]
    UINT            [reduce using rule 124 (ForStatement)]
    UNDERSCORE      [reduce using rule 124 (ForStatement)]
    NOT             [reduce using rule 124 (ForStatement)]
    TRUE            [reduce using rule 124 (ForStatement)]
    FALSE           [reduce using rule 124 (ForStatement)]
    DELETE          [reduce using rule 124 (ForStatement)]
    REQUIRE         [reduce using rule 124 (ForStatement)]
    ASSERT          [reduce using rule 124 (ForStatement)]
    AUTO            [reduce using rule 124 (ForStatement)]
    THROW           [reduce using rule 124 (ForStatement)]
    STRING          [reduce using rule 124 (ForStatement)]
    INT             [reduce using rule 124 (ForStatement)]
    NEW             [reduce using rule 124 (ForStatement)]
    MINUS           [reduce using rule 124 (ForStatement)]
    TILDE           [reduce using rule 124 (ForStatement)]
    $default        reduce using rule 124 (ForStatement)

    VariableDeclaration  go to state 235
    TypeName             go to state 142
    UserDefinedTypeName  go to state 43
    Mapping              go to state 44
    ArrayTypeName        go to state 45
    FunctionTypeName     go to state 46
    AssertStatement      go to state 236
    IfStatement          go to state 237
    WhileStatement       go to state 238
    SimpleStatement      go to state 239
    ForStatement         go to state 240
    DoWhileStatement     go to state 241
    EmitStatement        go to state 242
    VariableDefinition   go to state 243
    Expression           go to state 244
    Unary2               go to state 124
    PrimaryExpression    go to state 125
    FunctionCall         go to state 126
    NewExpression        go to state 127
    MemberAccess         go to state 128
    IndexAccess          go to state 129
    BooleanLiteral       go to state 130
    NumberLiteral        go to state 131
    ElementaryTypeName   go to state 245


State 388

  169 NameValue: COMMA IDENTIFIER COLON Expression NameValue •

    $default  reduce using rule 169 (NameValue)
