{"SourceCode":"contract AmIOnTheFork {\r\n    function forked() constant returns(bool);\r\n}\r\n\r\ncontract Ethsplit {\r\n\r\n    function split(address ethAddress, address etcAddress) {\r\n\r\n        if (amIOnTheFork.forked()) {\r\n            // if on the forked chain send ETH to ethAddress\r\n            ethAddress.call.value(msg.value)();\r\n        } \r\n        else {\r\n            // if not on the forked chain send ETC to etcAddress less fee\r\n            uint fee = msg.value/100;\r\n            fees.send(fee);\r\n            etcAddress.call.value(msg.value-fee)();\r\n        }\r\n    }\r\n\r\n    // Reject deposits to the contract\r\n    function () {\r\n        throw;  \r\n    }\r\n\r\n    // AmIOnTheFork oracle by _tr\r\n    AmIOnTheFork amIOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);\r\n    address fees = 0xdE17a240b031a4607a575FE13122d5195B43d6fC;\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ethAddress\",\"type\":\"address\"},{\"name\":\"etcAddress\",\"type\":\"address\"}],\"name\":\"split\",\"outputs\":[],\"type\":\"function\"}]","ContractName":"Ethsplit","CompilerVersion":"v0.3.5-2016-07-21-6610add","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"","SwarmSource":""}
